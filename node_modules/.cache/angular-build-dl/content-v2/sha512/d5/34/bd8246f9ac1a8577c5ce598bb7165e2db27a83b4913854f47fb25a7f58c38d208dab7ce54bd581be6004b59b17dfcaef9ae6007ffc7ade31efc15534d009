{"version":3,"sources":["./src/app/components/payment/add/add.component.html","./src/app/components/payment/payment.component.html","./src/app/components/payment/add/add.component.css","./src/app/components/payment/add/add.component.ts","./src/app/components/payment/payment.component.css","./src/app/components/payment/payment.component.ts","./src/app/components/payment/payment.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,oF;;;;;;;;;;;;ACAf;AAAe,mfAAob,GAAG,ueAAue,SAAS,KAAK,WAAW,GAAG,YAAY,obAAob,eAAe,KAAK,2BAA2B,KAAK,aAAa,GAAG,cAAc,uaAAua,cAAc,KAAK,+BAA+B,KAAK,aAAa,GAAG,cAAc,ohCAAohC,QAAQ,gHAAgH,4BAA4B,oRAAoR,iBAAiB,mEAAmE,uBAAuB,mMAAmM,2BAA2B,6H;;;;;;;;;;;;ACA5tH;AAAe,6GAA8C,+J;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAX;AAOlD,IAAa,YAAY,GAAzB,MAAa,YAAY;IAEvB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;CAEF;AAPY,YAAY;IALxB,+DAAS,CAAC;QACT,QAAQ,EAAE,SAAS;QACnB,0LAAmC;;KAEpC,CAAC;;GACW,YAAY,CAOxB;AAPwB;;;;;;;;;;;;;ACPzB;AAAe,yFAA0B,kBAAkB,KAAK,+CAA+C,uV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1C;AACS;AAC/B;AACkC;AACjB;AAOhE,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IA4C3B,YACU,UAAsB,EACtB,KAAmB,EACnB,YAAyB;QAFzB,eAAU,GAAV,UAAU,CAAY;QACtB,UAAK,GAAL,KAAK,CAAc;QACnB,iBAAY,GAAZ,YAAY,CAAa;QA5CnC,YAAO,GAAG,EAAE,CAAC;QAEb,cAAS,GAAG,EAAE,CAAC;QACf,aAAQ,GAAG,EAAE,CAAC;QACd,eAAU,GAAG,IAAI,CAAC;QAClB,oBAAe,GAAG,CAAC,CAAC;QACpB,cAAS,GAAG,CAAC,CAAC;QACd,YAAO,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QAChC,0BAA0B;QAC1B,qBAAgB,GAAa,CAAC,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QAEjG,kBAAa,GAAG,CAAC,CAAC;QAClB,qBAAgB,GAAG,IAAI,CAAC;QACxB,uBAAkB,GAAG,KAAK,CAAC;QAC3B,mDAAmD;QACnD,cAAS,GAAQ,EAAE,CAAC;QACpB,eAAU,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAMpD,wCAAwC;QACxC,uDAAuD;QACvD,qDAAqD;QACrD,oDAAoD;QACpD,2EAA2E;QAC3E,mCAAmC;QACnC,kCAAkC;QAClC,sCAAsC;QAEtC,cAAS,GAAG,IAAI,wDAAS,CAAC;YACxB,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjD,KAAK,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,IAAI,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,MAAM,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACrE,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC7B,OAAO,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;SAC7B,CAAC,CAAC;QACH,kBAAa,GAAG,CAAC,CAAC;QA2GlB,aAAQ,GAAG,eAAe;IArGtB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CACtC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,MAAM,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;QACpC,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CACvC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE7B,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,YAAY;QACV,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CACtC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CACvC,MAAM,CAAC,EAAE;gBACP,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACvB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;gBACvC,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAE9B,CAAC,CACF;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,QAAQ,CAAC;QACjC,gCAAgC;IAClC,CAAC;IACD,YAAY,CAAC,IAAI;QACf,0BAA0B;QAC1B,+CAA+C;QAC/C,wCAAwC;QACxC,QAAQ;IACV,CAAC;IACD,WAAW,CAAC,IAAI;QACd,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;QACjC,iCAAiC;QACjC,gCAAgC;QAChC,6BAA6B;QAC7B,SAAS;QACT,4BAA4B;QAC5B,IAAI;IACN,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,SAAS;QACP,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CACtC,MAAM,CAAC,EAAE;YACP,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,SAAS,CACtC,MAAM,CAAC,EAAE;gBACP,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBACvB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;gBACrC,CAAC,CAAC,CAAC;gBACH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE5B,CAAC,CACF;QACH,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;QACH,IAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,QAAQ,CAAC;IACnC,CAAC;IAED,YAAY,CAAC,IAAI;QACf,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACtB,IAAI,EAAE,WAAW,CAAC,IAAI;YACtB,KAAK,EAAE,WAAW,CAAC,KAAK;YACxB,OAAO,EAAE,WAAW,CAAC,OAAO;YAC5B,MAAM,EAAE,CAAC;YACT,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SACd,CAAC,CAAC;IACL,CAAC;IACD,gBAAgB,CAAC,IAAI;QACnB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC;QAElD,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,EAAE;YAEnB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,SAAS,CACpE,CAAC,MAAW,EAAE,EAAE;gBACd,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC3B;qBACI;oBACH,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;oBAC/B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,+BAA+B,EAC7C,EAAE,SAAS,EAAE,uBAAuB,EAAE,KAAK,EAAE,IAAI,EAAE,CACpD,CAAC;iBACH;YACH,CAAC,CACF,CAAC;SACH;aACI;YACH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,SAAS,CAC3D,CAAC,MAAW,EAAE,EAAE;gBACd,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAC3B;qBACI;oBACH,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;oBACxB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,mCAAmC,EACjD,EAAE,SAAS,EAAE,uBAAuB,EAAE,KAAK,EAAE,IAAI,EAAE,CACpD,CAAC;iBACH;YACH,CAAC,CACF,CAAC;SACH;IACH,CAAC;IACD,sBAAsB;IACtB,QAAQ,CAAC,GAAG;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACtC,IAAI,KAAK,GAAW,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC;QACnE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAM,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACpC,CAAC;IAED,UAAU,CAAC,IAAI;QACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAM,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACpC,CAAC;IAED,WAAW,CAAC,MAAM,EAAE,MAAM;QACxB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QACtC,kCAAkC;QAClC,IAAI,KAAK,GAAW,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC;QACtE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAChC,kBAAkB;QAClB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAAM,IAAI,CAAC,SAAS,CAAC,CAAC;QAC9D,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;IACpC,CAAC;CACF;;YAhMuB,uDAAU;YACf,wEAAY;YACL,0DAAW;;AA1BS;IAA3C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;8BAAY,8DAAY;mDAAC;AAC7B;IAAtC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC;8BAAQ,yDAAO;+CAAC;AAtB3C,gBAAgB;IAL5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,8LAAuC;;KAExC,CAAC;qCA8CsB,uDAAU;QACf,wEAAY;QACL,0DAAW;GA/CxB,gBAAgB,CA6O5B;AA7O4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXY;AACM;AACQ;AACA;AACA;AACJ;AACe;AACX;AAGhD,MAAM,MAAM,GAAW;IAC5B;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mEAAgB;KAC5B;IACD;QACE,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,+DAAY;KACxB;CAEF,CAAC;AAiBF,IAAa,aAAa,GAA1B,MAAa,aAAa;CAAI;AAAjB,aAAa;IAfzB,8DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,mEAAgB;YAChB,+DAAY;SACb;QACD,OAAO,EAAE;YACP,4DAAY;YACZ,+DAAc;YACd,0DAAW;YACX,kEAAmB;YACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7B,oEAAoB,CAAC,OAAO,EAAE;SAE/B;KACF,CAAC;GACW,aAAa,CAAI;AAAJ","file":"components-payment-payment-module-es2015.js","sourcesContent":["export default \"<p>add works!</p>\\n\"","export default \"<div class=\\\"d-flex payment-container\\\" >\\n  <div class=\\\"col-4 mat-typography\\\">\\n    <form [formGroup]=\\\"paymentFC\\\" enctype=\\\"multipart/form-data\\\"\\n    (ngSubmit)=\\\"paymentOperation(editData)\\\">\\n    <mat-form-field>\\n      <mat-label>Type</mat-label>\\n      <mat-select name=\\\"type\\\" formControlName=\\\"type\\\" (selectionChange)=\\\"onSelectType($event)\\\">\\n        <mat-option *ngFor=\\\"let c of payType\\\" [value]=\\\"c\\\">\\n          {{c}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Label</mat-label>\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"label\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Account</mat-label>\\n      <mat-select name=\\\"account\\\" formControlName=\\\"account\\\" (selectionChange)=\\\"onSelectAccount($event)\\\">\\n        <mat-option *ngFor=\\\"let i of accounts\\\" [value]=\\\"i.id\\\" >\\n          {{i.label}} - {{i.balance}} {{i.currency}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n      <mat-form-field *ngIf=\\\"paymentFC.value.type == 'Expense'\\\">\\n        <mat-label>Bill Reference</mat-label>\\n        <mat-select name=\\\"ref_bill\\\" formControlName=\\\"ref_bill\\\" (selectionChange)=\\\"onSelectBill($event)\\\">\\n          <span *ngFor=\\\"let c of bills\\\">\\n            <mat-option [value]=\\\"c.id\\\" *ngIf=\\\"c.currency == selectedCurr\\\">\\n              {{c.bill_number}} - {{ vendors[c.vendor].label }} - {{ c.balance }} {{ c.currency }}\\n            </mat-option>\\n          </span>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field *ngIf=\\\"paymentFC.value.type == 'Income'\\\">\\n        <mat-label>Invoice Reference</mat-label>\\n        <mat-select name=\\\"ref_inv\\\" formControlName=\\\"ref_inv\\\">\\n          <span *ngFor=\\\"let c of invoices\\\">\\n            <mat-option [value]=\\\"c.id\\\" *ngIf=\\\"c.currency == selectedCurr\\\">\\n              {{c.inv_number}} - {{ customers[c.customer].label }} - {{ c.balance }} {{ c.currency }}\\n            </mat-option>\\n          </span>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Amount</mat-label>\\n        <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" formControlName=\\\"amount\\\" (change)=\\\"onSetAmount($event)\\\">\\n      </mat-form-field>\\n  \\n  \\n  \\n      <span *ngIf=\\\"editData\\\">\\n        <button type=\\\"submit\\\" mat-button color=\\\"primary\\\">Update</button>\\n        <button mat-button color=\\\"accent\\\" (click)=\\\"onResetForm()\\\">Cancel</button>\\n      </span>\\n      <span *ngIf=\\\"!editData\\\">\\n        <!-- <button mat-button color=\\\"accent\\\" (click)=\\\"onResetForm()\\\">Cancel</button> -->\\n        <button *ngIf=\\\"formStatus\\\" type=\\\"submit\\\" mat-button color=\\\"primary\\\">Create</button>\\n      </span>\\n    </form>\\n  </div>\\n  <div class=\\\"col-8 \\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" matSort matSortActive=\\\"id\\\"\\n      matSortDisableClear matSortDirection=\\\"desc\\\">\\n      <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedColumns\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{ column.replace('_', ' ') }} </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <button *ngIf=\\\"column == 'id'\\\" mat-raised-button mat-button (click)=\\\"activeEdit(element)\\\" align=\\\"end\\\"\\n          tabindex=\\\"-1\\\">Edit</button>\\n          <span *ngIf=\\\"column != 'id'\\\">\\n            {{element[column]}}\\n            <span *ngIf=\\\"column == 'amount'\\\">\\n              {{ element['currency'] }}\\n            </span>\\n          </span>\\n        </td>\\n      </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator>\\n    </table>\\n  </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF5bWVudC9hZGQvYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".payment-container table{\\r\\n  width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF5bWVudC9wYXltZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGF5bWVudC1jb250YWluZXIgdGFibGV7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","import { Component, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ApiService } from '../../api.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ToastService } from '../../shared/toast/toast-service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  bills;\n  selectedCurr;\n  vendors = [];\n  invoices;\n  customers = [];\n  accounts = [];\n  formStatus = true;\n  availableAmount = 0;\n  maxAmount = 0;\n  payType = ['Income', 'Expense'];\n  // Define all the variable\n  displayedColumns: string[] = ['label', 'account', 'amount', 'type', 'ref_bill', 'ref_inv', 'id'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  // Build the table data source based on table data.\n  tableData: any = [];\n  dataSource = new MatTableDataSource(this.tableData);\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) msort: MatSort;\n  \n\n  // paymentFC = this._formBuilder.group({\n  //   account: new FormControl('', Validators.required),\n  //   label: new FormControl('', Validators.required),\n  //   type: new FormControl('', Validators.required),\n  //   amount: new FormControl('', [Validators.min(0), Validators.required]),\n  //   ref_bill: new FormControl(''),\n  //   ref_inv: new FormControl(''),\n  // }, { validator: this.checkAmount })\n\n  paymentFC = new FormGroup({\n    account: new FormControl('', Validators.required),\n    label: new FormControl('', Validators.required),\n    type: new FormControl('', Validators.required),\n    amount: new FormControl('', [Validators.min(0), Validators.required]),\n    ref_bill: new FormControl(''),\n    ref_inv: new FormControl(''),\n  });\n  billInvAmpunt = 0;\n  editData;\n  constructor(\n    private apiService: ApiService,\n    private toast: ToastService,\n    private _formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n    this.loadPayments();\n    this.loadBills();\n    this.loadInvoices();\n    this.loadAccounts();\n  }\n\n  loadPayments() {\n    this.apiService.loadAll('pay').subscribe(\n      result => {\n        this.dataSource.data = result;\n        this.dataSource.sort = this.msort;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  loadAccounts() {\n    this.apiService.loadAll('acnt').subscribe(\n      result => {\n        this.accounts = result;\n        console.log(this.accounts);\n        \n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  loadInvoices() {\n    this.apiService.loadAll('inv').subscribe(\n      result => {\n        this.invoices = result;\n        this.apiService.loadAll('csmr').subscribe(\n          result => {\n            result.forEach(element => {\n              this.customers[element.id] = element; \n            });\n            console.log(this.customers);\n            \n          },\n        )\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  onSelectAccount(data){\n    let acc = this.accounts.filter(x => x.id == data.value)[0];\n    this.selectedCurr = acc.currency;    \n    // this.availableAmount = +2000;\n  }\n  onSelectBill(data){\n    // this.maxAmount = +1000;\n    // if (this.maxAmount > this.availableAmount) {\n    //   alert('Choose valueable account!');\n    // }    \n  }\n  onSetAmount(data){\n    const AMOUNT = data.target.value;\n    // if (AMOUNT > this.maxAmount) {\n    //   alert('Set Valid Amount!');\n    //   this.formStatus = false;\n    // }else{\n    //   this.formStatus = true;\n    // }\n  }\n\n  onResetForm(){\n    this.editData = null;\n    this.payType = ['Income', 'Expense'];\n    this.paymentFC.reset();\n  }\n\n  loadBills() {\n    this.apiService.loadAll('bil').subscribe(\n      result => {\n        this.bills = result;\n        this.apiService.loadAll('vdr').subscribe(\n          result => {\n            result.forEach(element => {\n              this.vendors[element.id] = element;\n            });\n            console.log(this.vendors);\n            \n          },\n        )\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  refrence = 'Bill Refrence'\n  activeEdit(data){\n    this.editData = data;\n    this.payType = [data.type]\n    this.paymentFC.setValue({\n      label: data.label,\n      account: data.account,\n      amount: data.amount,\n      type: data.type,\n      ref_bill: data.ref_bill,\n      ref_inv: data.ref_inv,\n    });\n    let acc = this.accounts.filter(x => x.id == data.account)[0];\n    this.selectedCurr = acc.currency;\n  }\n\n  onSelectType(data){\n    let defaultData = this.paymentFC.value;  \n    this.paymentFC.setValue({\n      type: defaultData.type,\n      label: defaultData.label,\n      account: defaultData.account,\n      amount: 0,\n      ref_bill: null,\n      ref_inv: null,\n    });\n  }\n  paymentOperation(data) {\n    this.paymentFC.value.currency = this.selectedCurr;\n\n    if (data && data.id) {\n\n      this.apiService.update(data.id, this.paymentFC.value, 'pay').subscribe(\n        (result: any) => {\n          if (result.error) {\n            console.log(result.error);\n          }\n          else {\n            this.updateTable(data, result);\n            this.toast.show('Payment updated successfully!',\n              { classname: 'bg-success text-light', delay: 5000 }\n            );            \n          }\n        },\n      );\n    }\n    else {\n      this.apiService.create(this.paymentFC.value, 'pay').subscribe(\n        (result: any) => {\n          if (result.error) {\n            console.log(result.error);\n          }\n          else {\n            this.addToTable(result);\n            this.toast.show('New payment created successfully!',\n              { classname: 'bg-success text-light', delay: 5000 }\n            );\n          }\n        },\n      );\n    }\n  }\n  // Delete Item From UI\n  deleteUI(row) {\n    this.tableData = this.dataSource.data;\n    let index: number = this.tableData.findIndex(data => data === row);\n    this.tableData.splice(index, 1);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  addToTable(data) {\n    this.tableData = this.dataSource.data;\n    this.dataSource.data = this.tableData.push(data);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  updateTable(oldRow, newRow) {\n    this.tableData = this.dataSource.data;\n    // Remove the old data from table.\n    let index: number = this.tableData.findIndex(data => data === oldRow);\n    this.tableData.splice(index, 1);\n    // Add update row.\n    this.dataSource.data = this.tableData.push(newRow);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentComponent } from './payment.component';\nimport { MaterialModule } from '../../material-module';\nimport { AddComponent } from './add/add.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxPermissionsModule } from 'ngx-permissions';\n\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: PaymentComponent,\n  },\n  {\n    path: 'add',\n    component: AddComponent\n  },\n\n];\n\n@NgModule({\n  declarations: [\n    PaymentComponent,\n    AddComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    NgxPermissionsModule.forRoot(),\n\n  ]\n})\nexport class PaymentModule { }\n"],"sourceRoot":"webpack:///"}