{"version":3,"sources":["src/app/components/bill/bill.component.html","src/app/components/bill/cu-dialog.html","src/app/components/bill/bill.component.css","src/app/components/bill/bill.component.ts","src/app/components/bill/bill.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"csmr-table-actions table-actions\\\">\\n  <button class=\\\"m-1 text-white bg-success\\\" mat-raised-button mat-button (click)=\\\"openDialog(null)\\\">Add</button>\\n</div>\\n<table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" \\n  matSort matSortActive=\\\"id\\\"\\n  matSortDisableClear\\n  matSortDirection=\\\"desc\\\">\\n  <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedColumns\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{ readableColumns[column] }} </th>\\n    <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"column != 'id'\\\">\\n      <span *ngIf=\\\"column != 'due_date'\\\">\\n        <span *ngIf=\\\"column == 'status'\\\">\\n          <span class=\\\"material-icons text-success\\\" *ngIf=\\\"element[column]\\\">\\n            done\\n          </span>\\n          <span class=\\\"material-icons text-danger\\\" *ngIf=\\\"!element[column]\\\">\\n            clear\\n          </span>\\n        </span>\\n        <span *ngIf=\\\"column != 'status'\\\">\\n          {{element[column]}}\\n        </span>\\n        \\n      </span>\\n      <span *ngIf=\\\"column == 'due_date'\\\">{{element[column] | date: 'MMM d, y'}}</span>\\n    </span>\\n    <button class=\\\"m-1 text-white bg-info\\\" *ngIf=\\\"column == 'id'\\\" mat-raised-button mat-button (click)=\\\"openDialog(element, 'e')\\\" align=\\\"end\\\" tabindex=\\\"-1\\\">Edit</button>\\n    <button class=\\\"m-1 text-white bg-primary\\\" *ngIf=\\\"column == 'id'\\\" mat-raised-button mat-button (click)=\\\"expandedElement = expandedElement === element ? null : loadItems(element)\\\" align=\\\"end\\\" tabindex=\\\"-1\\\">Items</button>\\n    <button class=\\\"m-1 text-white bg-danger\\\" *ngIf=\\\"column == 'id'\\\" mat-raised-button mat-button (click)=\\\"delete(element)\\\" align=\\\"end\\\" tabindex=\\\"-1\\\">Delete</button>\\n      \\n    </td>\\n  </ng-container>\\n\\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\n  <ng-container matColumnDef=\\\"expandedDetail\\\">\\n    <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"displayedColumns.length\\\">\\n      <div class=\\\"element-detail\\\" [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\n        <div class=\\\"element-description\\\">\\n          <div *ngIf=\\\"loading\\\">Loading....</div>\\n          \\n          <div *ngIf=\\\"!loading\\\">\\n            <div *ngIf=\\\"bilItems.length == 0\\\">\\n              <p style=\\\"color: sandybrown;\\\">\\n                <strong>Warning!</strong> Item not found.\\n              </p>\\n            </div>\\n            <table *ngIf=\\\"bilItems.length > 0\\\" mat-table [dataSource]=\\\"bilItems\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" matSort matSortActive=\\\"id\\\"\\n              matSortDisableClear matSortDirection=\\\"desc\\\">\\n              <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedItemColumns\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{ readableItemColumns[column] }} </th>\\n                <td mat-cell *matCellDef=\\\"let element\\\"> <span *ngIf=\\\"column != 'id'\\\">\\n                    <span *ngIf=\\\"column != 'created_at'\\\">{{element[column]}}</span>\\n                    <span *ngIf=\\\"column == 'created_at'\\\">{{element[column] | date: 'MMM d, y'}}</span>\\n                  </span>\\n                </td>\\n              </ng-container>\\n              \\n              <tr mat-header-row *matHeaderRowDef=\\\"displayedItemColumns\\\"></tr>\\n              <tr mat-row *matRowDef=\\\"let row; columns: displayedItemColumns;\\\"></tr>\\n              <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\" class=\\\"element-row\\\"\\n    [class.expanded-row]=\\\"expandedElement === element\\\">\\n  </tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"detail-row\\\"></tr>\\n  <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"10\\\"></mat-paginator>\\n</table>\"","export default \"<mat-dialog-content  class=\\\"mat-typography\\\">\\r\\n<h2 mat-dialog-title>Add Bill</h2>\\r\\n<mat-horizontal-stepper [linear]=\\\"false\\\" #stepper>\\r\\n  <mat-step [stepControl]=\\\"billFC\\\">\\r\\n    <ng-template matStepLabel>Bill</ng-template>\\r\\n      <form class=\\\"example-container\\\" [formGroup]=\\\"billFC\\\" enctype=\\\"multipart/form-data\\\"\\r\\n        (ngSubmit)=\\\"bilOperation(editData)\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Vendor</mat-label>\\r\\n              <mat-select name=\\\"vendor\\\" formControlName=\\\"vendor\\\">\\r\\n                <span *ngFor=\\\"let c of vendor\\\">\\r\\n                  <mat-option [value]=\\\"c.id\\\" *ngIf=\\\"c.status\\\">\\r\\n                    {{c.label}}\\r\\n                  </mat-option>\\r\\n                </span>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Currency</mat-label>\\r\\n              <mat-select name=\\\"currency\\\" formControlName=\\\"currency\\\">\\r\\n                <mat-option *ngFor=\\\"let i of ['USD', 'AF']\\\" [value]=\\\"i\\\">\\r\\n                  {{i}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Due Date</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"date\\\" formControlName=\\\"due_date\\\" >\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"col-6\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Bill Number</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"bill_number\\\" [value]=\\\"bilNumber\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Total Price</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" disabled formControlName=\\\"total_price\\\" [value]=\\\"bilTotalPrice\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Balance</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" disabled formControlName=\\\"balance\\\" [value]=\\\"bilTotalPrice\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n        <span *ngIf=\\\"type == 'e'\\\">\\r\\n          <button type=\\\"submit\\\" mat-button color=\\\"primary\\\">Update</button>\\r\\n        </span>\\r\\n\\r\\n        <span *ngIf=\\\"type == 'a'\\\">\\r\\n          <h5 *ngIf=\\\"bill\\\">Bill Created, add items.</h5>\\r\\n          <button *ngIf=\\\"!bill\\\" type=\\\"submit\\\" mat-button color=\\\"primary\\\">Create</button>\\r\\n        </span>\\r\\n      </form>\\r\\n        <div align=\\\"end\\\">\\r\\n          <button mat-button matStepperNext>Next</button>\\r\\n        </div>\\r\\n\\r\\n      </mat-step>\\r\\n      <mat-step [stepControl]=\\\"itemsFC\\\">\\r\\n        <ng-template matStepLabel>Items</ng-template>\\r\\n        <h5 *ngIf=\\\"!bill\\\">The Bill is required, create it first.</h5>\\r\\n        <div class=\\\"items-bil\\\">\\r\\n\\r\\n          <div>\\r\\n            <form *ngIf=\\\"bill\\\" [formGroup]=\\\"itemsFC\\\" (ngSubmit)=\\\"createItem()\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Label</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"label\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Price</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" formControlName=\\\"price\\\" (change)=\\\"checkTotal()\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Quantity</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" formControlName=\\\"quantity\\\" (change)=\\\"checkTotal()\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Total</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" formControlName=\\\"total\\\" [value]=\\\"total\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field>\\r\\n              <mat-label>Descrtiption</mat-label>\\r\\n              <input matInput autocomplete=\\\"off\\\" type=\\\"textarea\\\" formControlName=\\\"desc\\\">\\r\\n            </mat-form-field>\\r\\n              <button type=\\\"submit\\\" mat-button color=\\\"primary\\\">Add</button>\\r\\n            </form>\\r\\n            <div *ngIf=\\\"errors != null\\\">\\r\\n              Errors:\\r\\n              <ul>\\r\\n                <li *ngFor=\\\"let err of errors | keyvalue\\\">{{readableInvItmTC[err.key]}}: {{ err.value }}</li>\\r\\n              </ul>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div>\\r\\n            <table *ngIf=\\\"billItems.length > 0\\\" mat-table [dataSource]=\\\"itemSource\\\" class=\\\"mat-elevation-z1 items\\\">\\r\\n              <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of bilItmTC\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef> {{readableInvItmTC[column]}} </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                  <span *ngIf=\\\"column != 'id'\\\" >{{ element[column] }}</span>\\r\\n                  <span *ngIf=\\\"column == 'id'\\\" >\\r\\n                    <a class=\\\"text-danger cus-cursor-pointer\\\" (click)=\\\"removeItem(element)\\\">X</a>\\r\\n                  </span>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"bilItmTC\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let element; columns: bilItmTC;\\\" class=\\\"example-element-row\\\">\\r\\n              </tr>\\r\\n            </table>\\r\\n          </div>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"steps-action\\\" align=\\\"end\\\">\\r\\n          <button mat-button matStepperPrevious>Back</button>\\r\\n          <button mat-button matStepperNext>Next</button>\\r\\n      </div>\\r\\n    </mat-step>\\r\\n  <mat-step>\\r\\n    <ng-template matStepLabel>Preview</ng-template>\\r\\n    <div *ngIf=\\\"bill\\\">\\r\\n      <ng-template matStepLabel>Bill</ng-template>\\r\\n      <div class=\\\"preview-bil\\\">\\r\\n        <div>\\r\\n\\r\\n          <div>\\r\\n            <strong>Bill Number</strong>\\r\\n            <p>{{bill.bill_number}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Vendor</strong>\\r\\n            <p>{{bill.vendor}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Currency</strong>\\r\\n            <p>{{bill.currency}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Total Price</strong>\\r\\n            <p>{{bilTotalPrice}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Balance</strong>\\r\\n            <p>{{bilTotalPrice}}</p>\\r\\n          </div>\\r\\n          <div>\\r\\n            <strong>Due Date</strong>\\r\\n            <p>{{bill.due_date}}</p>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div>\\r\\n          <table *ngIf=\\\"billItems.length > 0\\\" mat-table [dataSource]=\\\"itemSource\\\" class=\\\"mat-elevation-z1 items\\\">\\r\\n            <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of bilItmTC\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> {{readableInvItmTC[column]}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" > {{element[column]}} </td>\\r\\n            </ng-container>\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"bilItmTC\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let element; columns: bilItmTC;\\\" class=\\\"example-element-row\\\">\\r\\n            </tr>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"steps-action\\\" align=\\\"end\\\">\\r\\n        <button mat-button matStepperPrevious>Back</button>\\r\\n        <button *ngIf=\\\"billItems.length > 0\\\" mat-button (click)=\\\"finishBill(bill)\\\">Complete</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-step>\\r\\n</mat-horizontal-stepper>\\r\\n\\r\\n  <mat-dialog-actions align=\\\"end\\\">\\r\\n    <button mat-button mat-dialog-close>Cancel</button>\\r\\n  </mat-dialog-actions>\\r\\n</mat-dialog-content>\"","export default \"table, .element-description {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.detail-row {\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\ntr.element-row:not(.expanded-row):hover {\\r\\n  background: whitesmoke;\\r\\n}\\r\\n\\r\\ntr.element-row:not(.expanded-row):active {\\r\\n  background: #efefef;\\r\\n}\\r\\n\\r\\n.element-row td {\\r\\n  border-bottom-width: 0;\\r\\n}\\r\\n\\r\\n.element-detail {\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.element-diagram {\\r\\n  min-width: 80px;\\r\\n  border: 2px solid black;\\r\\n  padding: 8px;\\r\\n  font-weight: lighter;\\r\\n  margin: 8px 0;\\r\\n  height: 104px;\\r\\n}\\r\\n\\r\\n.element-symbol {\\r\\n  font-weight: bold;\\r\\n  font-size: 40px;\\r\\n  line-height: normal;\\r\\n}\\r\\n\\r\\n.element-description {\\r\\n  padding: 16px;\\r\\n}\\r\\n\\r\\n.element-description-attribution {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.element-detail {\\r\\n  min-height: 100px;\\r\\n}\\r\\n\\r\\n.mat-elevation-z1.items{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.preview-bil > div:nth-child(1){\\r\\n  width: 30%;\\r\\n  float: left;\\r\\n  padding: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n.preview-bil > div:nth-child(2){\\r\\n  width: 70%;\\r\\n  float: right;\\r\\n  padding: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n.items-bil > div:nth-child(1){\\r\\n  width: 30%;\\r\\n  float: left;\\r\\n  padding: 10px;\\r\\n}\\r\\n\\r\\n.items-bil > div:nth-child(2){\\r\\n  width: 70%;\\r\\n  padding: 10px;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.steps-action\\r\\n{\\r\\n  width: 100%;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9iaWxsL2JpbGwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLFNBQVM7QUFDWDs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUNBO0VBQ0UsV0FBVztBQUNiOztBQUNBO0VBQ0UsVUFBVTtFQUNWLFdBQVc7RUFDWCxhQUFhOztBQUVmOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFlBQVk7RUFDWixhQUFhOztBQUVmOztBQUNBO0VBQ0UsVUFBVTtFQUNWLFdBQVc7RUFDWCxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsYUFBYTtFQUNiLFlBQVk7QUFDZDs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gsWUFBWTtBQUNkIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9iaWxsL2JpbGwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlLCAuZWxlbWVudC1kZXNjcmlwdGlvbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRyLmRldGFpbC1yb3cge1xyXG4gIGhlaWdodDogMDtcclxufVxyXG5cclxudHIuZWxlbWVudC1yb3c6bm90KC5leHBhbmRlZC1yb3cpOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZXNtb2tlO1xyXG59XHJcblxyXG50ci5lbGVtZW50LXJvdzpub3QoLmV4cGFuZGVkLXJvdyk6YWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kOiAjZWZlZmVmO1xyXG59XHJcblxyXG4uZWxlbWVudC1yb3cgdGQge1xyXG4gIGJvcmRlci1ib3R0b20td2lkdGg6IDA7XHJcbn1cclxuXHJcbi5lbGVtZW50LWRldGFpbCB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG59XHJcblxyXG4uZWxlbWVudC1kaWFncmFtIHtcclxuICBtaW4td2lkdGg6IDgwcHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gIG1hcmdpbjogOHB4IDA7XHJcbiAgaGVpZ2h0OiAxMDRweDtcclxufVxyXG5cclxuLmVsZW1lbnQtc3ltYm9sIHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBmb250LXNpemU6IDQwcHg7XHJcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcclxufVxyXG5cclxuLmVsZW1lbnQtZGVzY3JpcHRpb24ge1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbn1cclxuXHJcbi5lbGVtZW50LWRlc2NyaXB0aW9uLWF0dHJpYnV0aW9uIHtcclxuICBvcGFjaXR5OiAwLjU7XHJcbn1cclxuXHJcbi5lbGVtZW50LWRldGFpbCB7XHJcbiAgbWluLWhlaWdodDogMTAwcHg7XHJcbn1cclxuLm1hdC1lbGV2YXRpb24tejEuaXRlbXN7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuLnByZXZpZXctYmlsID4gZGl2Om50aC1jaGlsZCgxKXtcclxuICB3aWR0aDogMzAlO1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcblxyXG59XHJcblxyXG4ucHJldmlldy1iaWwgPiBkaXY6bnRoLWNoaWxkKDIpe1xyXG4gIHdpZHRoOiA3MCU7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcblxyXG59XHJcbi5pdGVtcy1iaWwgPiBkaXY6bnRoLWNoaWxkKDEpe1xyXG4gIHdpZHRoOiAzMCU7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgcGFkZGluZzogMTBweDtcclxufVxyXG5cclxuLml0ZW1zLWJpbCA+IGRpdjpudGgtY2hpbGQoMil7XHJcbiAgd2lkdGg6IDcwJTtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGZsb2F0OiByaWdodDtcclxufVxyXG5cclxuLnN0ZXBzLWFjdGlvblxyXG57XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Inject, Output, Input, ViewChild, AfterViewInit } from '@angular/core';\nimport { ApiService } from '../../api.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatSort, MatPaginator, MatTableDataSource, MatSnackBar } from '@angular/material';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { disableDebugTools } from '@angular/platform-browser';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ToastService } from '../../shared/toast/toast-service';\n\n@Component({\n  selector: 'app-bill',\n  templateUrl: './bill.component.html',\n  styleUrls: ['./bill.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\n\nexport class BillComponent implements AfterViewInit {\n\n  // Define all the variable\n  displayedColumns: string[] = [\n    'bill_number',\n    'vendor',\n    'total_price',\n    'balance',\n    'due_date',\n    'status',\n    'id'\n  ];\n\n      // Define all the variable\n  readableColumns = {\n    bill_number: 'Bill Number',\n    vendor: 'Vendor',\n    total_price: 'Total Price',\n    balance: 'Balance',\n    due_date: 'Due Date',\n    status: 'Status',\n    id: 'Action'\n  };\n  displayedItemColumns: string[] = [\n    'label',\n    'price',\n    'quantity',\n    'total',\n    'created_at',\n    'desc',\n    // 'id'\n  ];\n  readableItemColumns ={\n    label: 'Label',\n    price: 'Price',\n    quantity: 'Quantity',\n    total: 'Total',\n    created_at: 'Created At',\n    desc: 'Description',\n  };\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  vendors: any;\n  editData;\n  // Build the table data source based on table data.\n  tableData: any = [];\n  dataSource = new MatTableDataSource(this.tableData);\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) msort: MatSort;\n\n  @Output() bills: any\n\n  constructor(\n    private apiService: ApiService,\n    public dialog: MatDialog,\n    private toast: ToastService,\n  ) { }\n\n  ngAfterViewInit() {\n    this.loadBills();\n    this.apiService.loadAll('vdr').subscribe(\n      result => {\n        this.vendors = result;        \n      }\n    );\n  }\n  bilItems = [];\n  loading = true;\n\n  assigning(data){\n    this.bilItems = data;\n  }\n  loadItems(elm){\n    this.loading = true;\n    this.bilItems = [];\n    this.apiService.retrive('bitm', elm.id).subscribe(\n      result => {\n        this.assigning(result);\n        this.loading = false;\n      }\n    );\n    return elm; \n  }\n  // _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-\n  loadBills() {\n    this.apiService.loadAll('bil').subscribe(\n      result => {\n        this.dataSource.data = result;\n        this.dataSource.sort = this.msort;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  openDialog(data, type = 'a') {\n    const dialogRef = this.dialog.open(CuDialog, {\n      data: {\n        mainData: data, \n        vendor: this.vendors,\n        type: type\n      },\n    });\n    if (data) {\n      this.apiService.loadAll('pay').subscribe(\n        result => {                    \n          if (result.filter(x => x.ref_bill == data.id).length > 0) {\n            dialogRef.close();\n            this.toast.show(\"Edit not allowed for this item!\\nThis Item has assigned Payment.\", { classname: 'bg-danger text-light', delay: 5000 });\n          }\n        },\n      );\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n      // Do nothing on cancel and if it return value update table.\n      if (result) {\n        if (type == 'a') {\n          this.addToTable(result);\n        }else{\n          this.updateTable(data, result);\n        }\n      }\n    });\n  }\n  \n  // Delete Item From Server.\n  delete(row){\n    this.apiService.loadAll('pay').subscribe(\n      result => {\n        if (result.filter(x => x.ref_bill == row.id).length > 0) {\n          this.toast.show(\"Delete not allowed for this item!\\nThis Item has assigned Payment.\", { classname: 'bg-danger text-light', delay: 5000 });\n        } else {\n          if (confirm('Are sure to delete?')) {\n            this.apiService.delete(row.id, 'bil').subscribe(\n              result => {\n                this.deleteUI(row);\n              }\n            );\n          }\n        }\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  // Delete Item From UI\n  deleteUI(row) {\n    this.tableData = this.dataSource.data;\n    let index: number = this.tableData.findIndex(data => data === row);\n    this.tableData.splice(index, 1);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n    this.toast.show(\"Bill deleted successfully!\\nID: \" + row.bill_number, { classname: 'bg-success text-light', delay: 5000 });\n\n  }\n\n  addToTable(data){\n    this.tableData = this.dataSource.data;\n    this.dataSource.data = this.tableData.push(data);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  updateTable(oldRow, newRow) {\n    this.tableData = this.dataSource.data;\n    // Remove the old data from table.\n    this.tableData = this.tableData.filter(item => item.id != oldRow.id);\n        \n    // Add update row.\n    this.tableData.push(newRow);    \n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n\n\nexport interface DialogData { }\n\n@Component({\n  selector: 'cu-dialog',\n  templateUrl: 'cu-dialog.html',\n  styleUrls: ['./bill.component.css'],\n\n})\nexport class CuDialog implements OnInit{\n\n  constructor(\n    private apiService: ApiService,\n    public dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) public dData: DialogData,\n    private _formBuilder: FormBuilder,\n    private _snackBar: MatSnackBar\n\n  ) { }\n\n  billFC = new FormGroup({\n    bill_number: new FormControl('', Validators.required),\n    vendor: new FormControl('', Validators.required),\n    currency: new FormControl('', Validators.required),\n    total_price: new FormControl(0),\n    balance: new FormControl(0),\n    due_date: new FormControl('', Validators.required),\n    status: new FormControl(0, Validators.required),\n  });\n  \n  entity:any = this.dData;\n  vendor: any = this.entity.vendor;\n  type = this.entity.type;\n  isPreview = false;\n  isLinear = true;\n  errors;\n  itemsFC = this._formBuilder.group({\n    label: ['', ],\n    price: ['', ],\n    quantity: ['', ],\n    total: ['', ],\n    desc: ['', ],\n  });\n  total: number;\n  bill = this.entity.mainData;\n  bilNumber = '';\n  billItems: any = [];\n  editData;\n  message;\n  itemSource = new MatTableDataSource(this.billItems);\n  bilItmTC = ['label', 'price', 'quantity', 'total', 'desc', 'id'];\n  readableInvItmTC = {\n    label: 'Label',\n    price: 'Price',\n    quantity: 'Quantity',\n    total: 'Total',\n    desc: 'Description',\n  };\n\n  bilTotalPrice = 0;\n\n  ngOnInit() {\n    console.log(this.entity);\n    // Assign Dialog data to new variable.\n    // Because it return error when trying to get data.\n    if (this.entity.mainData) {\n      this.editData = this.entity.mainData;\n      this.loadItems(this.editData);\n      this.bilNumber = this.editData.bill_number;\n      this.billFC.setValue({\n        bill_number: this.editData.bill_number,\n        vendor: this.editData.vendor,\n        currency: this.editData.currency,\n        total_price: this.editData.total_price,\n        balance: this.editData.balance,\n        due_date: this.editData.due_date,\n        status: this.editData.status,\n      });\n\n      this.billFC.controls['bill_number'].disable();\n      this.billFC.controls['total_price'].disable();\n      this.billFC.controls['balance'].disable();\n    }\n    else{\n      this.getLastInvNum();  \n    }\n\n  }\n  \n  checkTotal(){\n    this.itemsFC.value.total = this.total = Number(this.itemsFC.value.price * this.itemsFC.value.quantity);    \n  }\n\n  loading = true;\n\n  assigning(data) {\n    this.billItems = data;\n    this.calTotal();\n    \n    this.itemSource = new MatTableDataSource(this.billItems);\n  }\n\n  calTotal(){\n    let count = 0;\n    this.billItems.forEach(element => {\n      count += element.total;\n    });\n    this.bilTotalPrice = count;\n  }\n\n  loadItems(elm) {\n    this.loading = true;\n    this.billItems = [];\n    this.apiService.retrive('bitm', elm.id).subscribe(\n      result => {\n        this.assigning(result);\n        this.loading = false;\n      }\n    );\n    return elm;\n  }\n\n\n  bilOperation(data){\n    this.billFC.value.bill_number = this.bilNumber;\n\n    if (data) {\n    console.log('update');\n    \n      this.apiService.update(data.id, this.billFC.value, 'bil').subscribe(\n        (result: any) => {\n          if (result.error) {\n            console.log(result.error);\n          }\n          else {\n            this.dialogRef.close(result);\n          }\n        },\n      );\n    }\n    else{\n      this.apiService.create(this.billFC.value, 'bil').subscribe(\n        (result: any) => {\n          if (result.error) {\n            console.log(result.error);\n          }\n          else {\n            this.bill = result;\n          }\n        },\n      );\n    }\n    \n  }\n\n  getLastInvNum() {    \n    this.apiService.loadAll('last_bil').subscribe(\n      result => {\n        this.bilNumber = 'Bill-' + result.bill;\n        this.billFC.controls['bill_number'].disable();\n        this.billFC.controls['total_price'].disable();\n        this.billFC.controls['balance'].disable();\n      }\n    );\n  }\n\n  createItem(){\n    this.errors = null;\n    this.itemsFC.value.bill = this.bill.id;\n\n    this.apiService.create(this.itemsFC.value, 'bitm').subscribe(\n      (result: any) => {\n        if (result.error) {\n          this.errors = result.error;          \n        }\n        else {\n          this.billItems.push(result);\n          console.log(this.billItems);\n          \n          this.calTotal();\n          this.itemSource = new MatTableDataSource(this.billItems);          \n          this.itemsFC.reset();\n        }\n      },\n    );\n  }\n  removeItem(data){\n    if (confirm('Are sure to delete?')) {\n      this.apiService.delete(data.id, 'bitm').subscribe(\n        result => {\n          this.billItems = this.billItems.filter(item => item !== data);\n          this.itemSource = new MatTableDataSource(this.billItems);\n          this._snackBar.openFromComponent(SnakComponent, {\n            duration: 2000,\n          });\n          this.calTotal();\n        }\n      );\n    }\n  }\n\n  finishBill(bil){\n    this.calTotal();\n    this.billFC.value.total_price = this.bilTotalPrice;\n    this.billFC.value.balance = this.bilTotalPrice;\n    this.billFC.value.status = 1;    \n    this.bilOperation(bil);\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-login',\n  template: '<span>Item Deleted Successfully!</span>',\n  styles: [`\n    span{\n      style: green;\n    }`\n  ]\n})\nexport class SnakComponent { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BillComponent, CuDialog, SnakComponent } from './bill.component';\nimport { MaterialModule } from '../../material-module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\n\n\nexport const BillRoutes: Routes = [{\n  path: '',\n  component: BillComponent\n}];\n\n@NgModule({\n  declarations: [\n    BillComponent,\n    CuDialog,\n    SnakComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(BillRoutes)\n  ],\n  entryComponents: [\n    CuDialog,\n    SnakComponent\n  ],\n  providers: [\n    {\n      provide: STEPPER_GLOBAL_OPTIONS,\n      useValue: { showError: true }\n    }\n  ]\n})\nexport class BillModule { }\n"],"sourceRoot":"webpack:///","file":"components-bill-bill-module-es5.js"}