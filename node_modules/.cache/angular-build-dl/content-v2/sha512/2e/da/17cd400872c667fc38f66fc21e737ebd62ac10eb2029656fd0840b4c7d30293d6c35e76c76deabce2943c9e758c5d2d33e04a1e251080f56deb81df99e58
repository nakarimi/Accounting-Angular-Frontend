{"version":3,"sources":["src/app/components/payment/add/add.component.html","src/app/components/payment/payment.component.html","src/app/components/payment/add/add.component.css","src/app/components/payment/add/add.component.ts","src/app/components/payment/payment.component.css","src/app/components/payment/payment.component.ts","src/app/components/payment/payment.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<p>add works!</p>\\n\"","export default \"<div class=\\\"d-flex payment-container\\\" >\\n  <div class=\\\"col-4 mat-typography\\\">\\n    <form [formGroup]=\\\"paymentFC\\\" enctype=\\\"multipart/form-data\\\"\\n    (ngSubmit)=\\\"paymentOperation(editData)\\\">\\n    <mat-form-field>\\n      <mat-label>Type</mat-label>\\n      <mat-select name=\\\"type\\\" formControlName=\\\"type\\\" (selectionChange)=\\\"onSelectType($event)\\\">\\n        <mat-option *ngFor=\\\"let c of payType\\\" [value]=\\\"c\\\">\\n          {{c}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Label</mat-label>\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"label\\\">\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-label>Account</mat-label>\\n      <mat-select name=\\\"account\\\" formControlName=\\\"account\\\" (selectionChange)=\\\"onSelectAccount($event)\\\">\\n        <mat-option *ngFor=\\\"let i of accounts\\\" [value]=\\\"i.id\\\" >\\n          {{i.label}} - {{i.balance}} {{i.currency}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n      <mat-form-field *ngIf=\\\"paymentFC.value.type == 'Expense'\\\">\\n        <mat-label>Bill Reference</mat-label>\\n        <mat-select name=\\\"ref_bill\\\" formControlName=\\\"ref_bill\\\" (selectionChange)=\\\"onSelectBill($event)\\\">\\n          <span *ngFor=\\\"let c of bills\\\">\\n            <mat-option [value]=\\\"c.id\\\" *ngIf=\\\"c.currency == selectedCurr\\\">\\n              {{c.bill_number}} - {{ vendors[c.vendor].label }} - {{ c.balance }} {{ c.currency }}\\n            </mat-option>\\n          </span>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field *ngIf=\\\"paymentFC.value.type == 'Income'\\\">\\n        <mat-label>Invoice Reference</mat-label>\\n        <mat-select name=\\\"ref_inv\\\" formControlName=\\\"ref_inv\\\">\\n          <span *ngFor=\\\"let c of invoices\\\">\\n            <mat-option [value]=\\\"c.id\\\" *ngIf=\\\"c.currency == selectedCurr\\\">\\n              {{c.inv_number}} - {{ customers[c.customer].label }} - {{ c.balance }} {{ c.currency }}\\n            </mat-option>\\n          </span>\\n        </mat-select>\\n      </mat-form-field>\\n      <mat-form-field>\\n        <mat-label>Amount</mat-label>\\n        <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" formControlName=\\\"amount\\\" (change)=\\\"onSetAmount($event)\\\">\\n      </mat-form-field>\\n  \\n  \\n  \\n      <span *ngIf=\\\"editData\\\">\\n        <button type=\\\"submit\\\" mat-button color=\\\"primary\\\">Update</button>\\n        <button mat-button color=\\\"accent\\\" (click)=\\\"onResetForm()\\\">Cancel</button>\\n      </span>\\n      <span *ngIf=\\\"!editData\\\">\\n        <!-- <button mat-button color=\\\"accent\\\" (click)=\\\"onResetForm()\\\">Cancel</button> -->\\n        <button *ngIf=\\\"formStatus\\\" type=\\\"submit\\\" mat-button color=\\\"primary\\\">Create</button>\\n      </span>\\n    </form>\\n  </div>\\n  <div class=\\\"col-8 \\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\" matSort matSortActive=\\\"id\\\"\\n      matSortDisableClear matSortDirection=\\\"desc\\\">\\n      <ng-container matColumnDef=\\\"{{column}}\\\" *ngFor=\\\"let column of displayedColumns\\\">\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{ column.replace('_', ' ') }} </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <button *ngIf=\\\"column == 'id'\\\" mat-raised-button mat-button (click)=\\\"activeEdit(element)\\\" align=\\\"end\\\"\\n          tabindex=\\\"-1\\\">Edit</button>\\n          <span *ngIf=\\\"column != 'id'\\\">\\n            {{element[column]}}\\n            <span *ngIf=\\\"column == 'amount'\\\">\\n              {{ element['currency'] }}\\n            </span>\\n          </span>\\n        </td>\\n      </ng-container>\\n    \\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n      <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator>\\n    </table>\\n  </div>\\n</div>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF5bWVudC9hZGQvYWRkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".payment-container table{\\r\\n  width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wYXltZW50L3BheW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcGF5bWVudC9wYXltZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGF5bWVudC1jb250YWluZXIgdGFibGV7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\"","import { Component, OnInit, Output, ViewChild } from '@angular/core';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { ApiService } from '../../api.service';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { ToastService } from '../../shared/toast/toast-service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.component.html',\n  styleUrls: ['./payment.component.css']\n})\nexport class PaymentComponent implements OnInit {\n  bills;\n  selectedCurr;\n  vendors = [];\n  invoices;\n  customers = [];\n  accounts = [];\n  formStatus = true;\n  availableAmount = 0;\n  maxAmount = 0;\n  payType = ['Income', 'Expense'];\n  // Define all the variable\n  displayedColumns: string[] = ['label', 'account', 'amount', 'type', 'ref_bill', 'ref_inv', 'id'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  // Build the table data source based on table data.\n  tableData: any = [];\n  dataSource = new MatTableDataSource(this.tableData);\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) msort: MatSort;\n  \n\n  // paymentFC = this._formBuilder.group({\n  //   account: new FormControl('', Validators.required),\n  //   label: new FormControl('', Validators.required),\n  //   type: new FormControl('', Validators.required),\n  //   amount: new FormControl('', [Validators.min(0), Validators.required]),\n  //   ref_bill: new FormControl(''),\n  //   ref_inv: new FormControl(''),\n  // }, { validator: this.checkAmount })\n\n  paymentFC = new FormGroup({\n    account: new FormControl('', Validators.required),\n    label: new FormControl('', Validators.required),\n    type: new FormControl('', Validators.required),\n    amount: new FormControl('', [Validators.min(0), Validators.required]),\n    ref_bill: new FormControl(''),\n    ref_inv: new FormControl(''),\n  });\n  billInvAmpunt = 0;\n  editData;\n  constructor(\n    private apiService: ApiService,\n    private toast: ToastService,\n    private _formBuilder: FormBuilder,\n  ) { }\n\n  ngOnInit() {\n    this.loadPayments();\n    this.loadBills();\n    this.loadInvoices();\n    this.loadAccounts();\n  }\n\n  loadPayments() {\n    this.apiService.loadAll('pay').subscribe(\n      result => {\n        this.dataSource.data = result;\n        this.dataSource.sort = this.msort;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  loadAccounts() {\n    this.apiService.loadAll('acnt').subscribe(\n      result => {\n        this.accounts = result;\n        console.log(this.accounts);\n        \n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  loadInvoices() {\n    this.apiService.loadAll('inv').subscribe(\n      result => {\n        this.invoices = result;\n        this.apiService.loadAll('csmr').subscribe(\n          result => {\n            result.forEach(element => {\n              this.customers[element.id] = element; \n            });\n            console.log(this.customers);\n            \n          },\n        )\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  onSelectAccount(data){\n    let acc = this.accounts.filter(x => x.id == data.value)[0];\n    this.selectedCurr = acc.currency;    \n    // this.availableAmount = +2000;\n  }\n  onSelectBill(data){\n    // this.maxAmount = +1000;\n    // if (this.maxAmount > this.availableAmount) {\n    //   alert('Choose valueable account!');\n    // }    \n  }\n  onSetAmount(data){\n    const AMOUNT = data.target.value;\n    // if (AMOUNT > this.maxAmount) {\n    //   alert('Set Valid Amount!');\n    //   this.formStatus = false;\n    // }else{\n    //   this.formStatus = true;\n    // }\n  }\n\n  onResetForm(){\n    this.editData = null;\n    this.payType = ['Income', 'Expense'];\n    this.paymentFC.reset();\n  }\n\n  loadBills() {\n    this.apiService.loadAll('bil').subscribe(\n      result => {\n        this.bills = result;\n        this.apiService.loadAll('vdr').subscribe(\n          result => {\n            result.forEach(element => {\n              this.vendors[element.id] = element;\n            });\n            console.log(this.vendors);\n            \n          },\n        )\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  refrence = 'Bill Refrence'\n  activeEdit(data){\n    this.editData = data;\n    this.payType = [data.type]\n    this.paymentFC.setValue({\n      label: data.label,\n      account: data.account,\n      amount: data.amount,\n      type: data.type,\n      ref_bill: data.ref_bill,\n      ref_inv: data.ref_inv,\n    });\n    let acc = this.accounts.filter(x => x.id == data.account)[0];\n    this.selectedCurr = acc.currency;\n  }\n\n  onSelectType(data){\n    let defaultData = this.paymentFC.value;  \n    this.paymentFC.setValue({\n      type: defaultData.type,\n      label: defaultData.label,\n      account: defaultData.account,\n      amount: 0,\n      ref_bill: null,\n      ref_inv: null,\n    });\n  }\n  paymentOperation(data) {\n    this.paymentFC.value.currency = this.selectedCurr;\n\n    if (data && data.id) {\n\n      this.apiService.update(data.id, this.paymentFC.value, 'pay').subscribe(\n        (result: any) => {\n          if (result.error) {\n            console.log(result.error);\n          }\n          else {\n            this.updateTable(data, result);\n            this.toast.show('Payment updated successfully!',\n              { classname: 'bg-success text-light', delay: 5000 }\n            );            \n          }\n        },\n      );\n    }\n    else {\n      this.apiService.create(this.paymentFC.value, 'pay').subscribe(\n        (result: any) => {\n          if (result.error) {\n            console.log(result.error);\n          }\n          else {\n            this.addToTable(result);\n            this.toast.show('New payment created successfully!',\n              { classname: 'bg-success text-light', delay: 5000 }\n            );\n          }\n        },\n      );\n    }\n  }\n  // Delete Item From UI\n  deleteUI(row) {\n    this.tableData = this.dataSource.data;\n    let index: number = this.tableData.findIndex(data => data === row);\n    this.tableData.splice(index, 1);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  addToTable(data) {\n    this.tableData = this.dataSource.data;\n    this.dataSource.data = this.tableData.push(data);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  updateTable(oldRow, newRow) {\n    this.tableData = this.dataSource.data;\n    // Remove the old data from table.\n    let index: number = this.tableData.findIndex(data => data === oldRow);\n    this.tableData.splice(index, 1);\n    // Add update row.\n    this.dataSource.data = this.tableData.push(newRow);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PaymentComponent } from './payment.component';\nimport { MaterialModule } from '../../material-module';\nimport { AddComponent } from './add/add.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgxPermissionsModule } from 'ngx-permissions';\n\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: PaymentComponent,\n  },\n  {\n    path: 'add',\n    component: AddComponent\n  },\n\n];\n\n@NgModule({\n  declarations: [\n    PaymentComponent,\n    AddComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    NgxPermissionsModule.forRoot(),\n\n  ]\n})\nexport class PaymentModule { }\n"],"sourceRoot":"webpack:///","file":"components-payment-payment-module-es5.js"}