{"version":3,"sources":["src/app/components/user/user.component.html","src/app/components/user/user.component.css","src/app/components/user/user.component.ts","src/app/components/user/user.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<table width=\\\"100%\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"id\\\" matSortDisableClear\\n  matSortDirection=\\\"desc\\\">\\n\\n  <!-- Number Column -->\\n  <ng-container matColumnDef=\\\"username\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Username</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.username}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"email\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.email}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"first_name\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>First Name</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.first_name}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"last_name\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Name</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.last_name}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"is_active\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Is Active</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.is_active}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"date_joined\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Date Joined</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{ row.date_joined | date: 'MMM d, y' }}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"is_superuser\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Is Superuser</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <div [ngClass]=\\\"['super', 'superuser']\\\" *ngIf=\\\"row.is_superuser\\\">\\n        <mat-icon>check_circle</mat-icon>\\n        <div [ngClass]=\\\"'superusersync'\\\" (click)=\\\"switchSuperUser(row)\\\">\\n          <mat-icon>sync</mat-icon>\\n        </div>\\n      </div>\\n      <div [ngClass]=\\\"['nosuper', 'superuser']\\\" *ngIf=\\\"!row.is_superuser\\\">\\n        <mat-icon>cancel</mat-icon>\\n        <div [ngClass]=\\\"'superusersync'\\\" (click)=\\\"switchSuperUser(row)\\\">\\n          <mat-icon>sync</mat-icon>\\n        </div>\\n      </div>\\n      \\n    </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"last_login\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Last Login</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{ row.last_login | date: 'MMM d, y HH:MM:SS' }}</td>\\n  </ng-container>\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator>\\n</table>\"","export default \".superuser{\\r\\n  float: left;\\r\\n  width: 50px;\\r\\n}\\r\\n.superuser.super > .mat-icon {\\r\\n  color: chartreuse;\\r\\n}\\r\\n.superuser.nosuper > .mat-icon {\\r\\n  color:crimson;\\r\\n}\\r\\n.superusersync{\\r\\n  cursor: pointer;\\r\\n  display: none;\\r\\n  float: right;\\r\\n}\\r\\n.superuser:hover > .superusersync{\\r\\n  display: block;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy91c2VyL3VzZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7RUFDWCxXQUFXO0FBQ2I7QUFDQTtFQUNFLGlCQUFpQjtBQUNuQjtBQUNBO0VBQ0UsYUFBYTtBQUNmO0FBRUE7RUFDRSxlQUFlO0VBQ2YsYUFBYTtFQUNiLFlBQVk7QUFDZDtBQUNBO0VBQ0UsY0FBYztBQUNoQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvdXNlci91c2VyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc3VwZXJ1c2Vye1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiA1MHB4O1xyXG59XHJcbi5zdXBlcnVzZXIuc3VwZXIgPiAubWF0LWljb24ge1xyXG4gIGNvbG9yOiBjaGFydHJldXNlO1xyXG59XHJcbi5zdXBlcnVzZXIubm9zdXBlciA+IC5tYXQtaWNvbiB7XHJcbiAgY29sb3I6Y3JpbXNvbjtcclxufVxyXG5cclxuLnN1cGVydXNlcnN5bmN7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59IFxyXG4uc3VwZXJ1c2VyOmhvdmVyID4gLnN1cGVydXNlcnN5bmN7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ApiService } from '../../api.service';\nimport { MatTableDataSource, MatSort, MatPaginator } from '@angular/material';\nimport { ToastService } from '../../shared/toast/toast-service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  // Define all the variable\n  displayedColumns: string[] = ['username', 'email', 'first_name', 'last_name', 'is_active', 'date_joined', 'last_login', 'is_superuser'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  // Build the table data source based on table data.\n  tableData: any = [];\n  dataSource = new MatTableDataSource(this.tableData);\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) msort: MatSort;\n\n\n\n  constructor(\n    private apiService: ApiService,\n    public toast: ToastService\n  ) { }\n\n  ngOnInit() {\n    this.loadUsers();\n  }\n\n  loadUsers() {\n    this.apiService.loadAll('users').subscribe(\n      result => {\n        this.dataSource.data = result;\n        this.dataSource.sort = this.msort;\n        \n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  switchSuperUser(data) {\n    let msg;\n    if (data.is_superuser) {\n      msg = \"Are you sure to revoke Superuser?\"\n    }\n    else{\n      msg = \"Are you sure to make Superuser?\"\n    }\n    if (confirm(msg)) {\n      this.apiService.parUpdate(data.id, { 'is_superuser': !data.is_superuser}, 'users').subscribe(\n        result => {\n          this.toast.show('User updated successfully!',\n            { classname: 'bg-info text-light', delay: 2500 }\n          );\n          this.updateTable(data, result);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n    }\n  }\n\n  addToTable(data) {\n    this.tableData = this.dataSource.data;\n    this.dataSource.data = this.tableData.push(data);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  updateTable(oldRow, newRow) {\n    this.tableData = this.dataSource.data;\n    // Remove the old data from table.\n    let index: number = this.tableData.findIndex(data => data === oldRow);\n    this.tableData.splice(index, 1);\n    // Add update row.\n    this.dataSource.data = this.tableData.push(newRow);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserComponent } from './user.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MaterialModule } from '../../material-module';\n\n\nexport const UserRoutes: Routes = [{\n  path: '',\n  component: UserComponent\n}];\n\n@NgModule({\n  declarations: [\n    UserComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule.forChild(UserRoutes)\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":"webpack:///","file":"components-user-user-module-es5.js"}