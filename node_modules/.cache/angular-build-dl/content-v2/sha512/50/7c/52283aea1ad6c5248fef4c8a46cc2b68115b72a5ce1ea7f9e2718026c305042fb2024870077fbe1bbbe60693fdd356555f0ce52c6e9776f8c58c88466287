{"version":3,"sources":["src/app/components/transaction/transaction.component.html","src/app/components/transaction/transaction.component.css","src/app/components/transaction/transaction.component.ts","src/app/components/transaction/transaction.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"csmr-table-actions table-actions mat-typography\\\">\\n  <mat-form-field class=\\\"ml-2\\\">\\n    <mat-label>Filter</mat-label>\\n    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. ium\\\">\\n  </mat-form-field>\\n  <mat-form-field class=\\\"ml-2\\\">\\n    <mat-label>Column</mat-label>\\n    <mat-select (selectionChange)=\\\"filterCulChange($event)\\\">\\n      <mat-option value=\\\"all\\\">All</mat-option>\\n      <span *ngFor=\\\"let c of filterColumns\\\">\\n        <mat-option [value]=\\\"c\\\" *ngIf=\\\"c != 'id'\\\" class=\\\"text-capitalize\\\">\\n          {{ c.replace('_', ' ') }}\\n        </mat-option>\\n      </span>\\n    </mat-select>\\n</mat-form-field>\\n</div>\\n<table mat-table [dataSource]=\\\"dataSource\\\" multiTemplateDataRows class=\\\"mat-elevation-z8\\\"\\n  matSort matSortActive=\\\"id\\\" matSortDisableClear matSortDirection=\\\"desc\\\">\\n  <ng-container matColumnDef=\\\"account\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Account</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{ findAccount(row.account).label }}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"type\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Type</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <span class=\\\"material-icons\\\" [ngClass]=\\\"{expense: row.type == 'Expense'}\\\">\\n        transit_enterexit\\n      </span>\\n    </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"amount\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Amount</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{ row.amount }} {{ row.currency }}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"payment\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Payment</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{ findPay(row.payment) }}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"created_at\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Created At</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{ row.created_at | date: 'MMMM d, y - h:mm a' }}</td>\\n  </ng-container>\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator>\\n</table>\"","export default \"\\r\\ntd .expense{\\r\\n  transform: rotate(180deg);\\r\\n  color: red;\\r\\n}\\r\\n\\r\\ntd span:not(.expense){\\r\\n  color: green;\\r\\n}\\r\\n\\r\\ntable{\\r\\n  width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy90cmFuc2FjdGlvbi90cmFuc2FjdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixVQUFVO0FBQ1o7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3RyYW5zYWN0aW9uL3RyYW5zYWN0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxudGQgLmV4cGVuc2V7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG50ZCBzcGFuOm5vdCguZXhwZW5zZSl7XHJcbiAgY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG50YWJsZXtcclxuICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","import { Component, OnInit, Output, ViewChild } from '@angular/core';\nimport { ApiService } from '../../api.service';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../../shared/toast/toast-service';\n\n@Component({\n  selector: 'app-transaction',\n  templateUrl: './transaction.component.html',\n  styleUrls: ['./transaction.component.css']\n})\nexport class TransactionComponent implements OnInit {\n\n  @Output() accounts: any\n  payments;\n  // Define all the variable\n  displayedColumns: string[] = ['type', 'account', 'amount', 'payment', 'created_at'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  // Build the table data source based on table data.\n  tableData: any = [];\n  dataSource = new MatTableDataSource(this.tableData);\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) msort: MatSort;\n  perm;\n  constructor(\n    private apiService: ApiService,\n    private router: Router,\n    private toast: ToastService,\n  ) { }\n\n  ngOnInit() {\n    this.checkPerm();\n  }\n\n  checkPerm(){\n    this.apiService.loadAll('cuser').subscribe(\n      result => {\n        if (result[0].is_superuser) {\n          this.loadAccounts();\n        }\n        else {\n          this.router.navigate(['/dashboard']);\n          this.toast.show(\"Permission denied!\", { classname: 'bg-danger text-light', delay: 5000 });\n        }\n    })\n  }\n  loadTransactions() {\n    this.apiService.loadAll('trs').subscribe(\n      (result: any) => {\n        this.dataSource.data = result;\n        this.dataSource.sort = this.msort;\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  loadAccounts() {\n    this.apiService.loadAll('acnt').subscribe(\n      result => {\n        this.accounts = result;\n        this.loadPayments();\n      },\n    );\n  }\n  findAccount(acid){\n    return this.accounts.filter(x => x.id == acid)[0];\n  }\n\n  loadPayments() {\n    this.apiService.loadAll('pay').subscribe(\n      result => {\n        this.payments = result;\n        this.loadTransactions();\n      },\n    );\n  }\n\n\n  findPay(payid){\n    return this.payments.filter(x => x.id == payid)[0].label;\n  }\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    console.log(filterValue);\n    \n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    console.log(this.dataSource.filter);\n    \n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { TransactionComponent } from './transaction.component';\nimport { MaterialModule } from '../../material-module';\nimport { NgxPermissionsModule } from 'ngx-permissions';\n\n\nexport const routes: Routes = [{\n  path: '',\n  component: TransactionComponent\n}];\n\n@NgModule({\n  declarations: [\n    TransactionComponent,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    RouterModule.forChild(routes)\n  ],\n  exports:[\n    NgxPermissionsModule\n  ]\n})\nexport class TransactionModule { }\n"],"sourceRoot":"webpack:///","file":"components-transaction-transaction-module-es5.js"}