{"version":3,"sources":["./src/app/components/account/account.component.html","./src/app/components/account/add-dialog.html","./src/app/components/account/edit-dialog.html","./src/app/components/account/account.component.css","./src/app/components/account/account.component.ts","./src/app/components/account/account.module.ts"],"names":[],"mappings":"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","file":"components-account-account-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-6\\\">\\n    <h4>USD Accounts</h4>\\n    <div style=\\\"display: block;\\\">\\n      <canvas baseChart [data]=\\\"pieChartData\\\" [labels]=\\\"pieChartLabels\\\" [chartType]=\\\"pieChartType\\\"\\n        [options]=\\\"pieChartOptions\\\" [plugins]=\\\"pieChartPlugins\\\" [legend]=\\\"pieChartLegend\\\"\\n            [colors]=\\\"pieChartColors\\\"\\n            >\\n      </canvas>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-6\\\">\\n    <h4>Afghani Accounts</h4>\\n    <div style=\\\"display: block;\\\">\\n      <canvas baseChart [data]=\\\"pieChartAfData\\\" [labels]=\\\"pieChartAfLabels\\\" [chartType]=\\\"pieChartAfType\\\"\\n        [options]=\\\"pieChartAfOptions\\\" [plugins]=\\\"pieChartAfPlugins\\\" [legend]=\\\"pieChartAfLegend\\\" [colors]=\\\"pieChartAfColors\\\">\\n      </canvas>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"csmr-table-actions table-actions\\\">\\n  <button class=\\\"m-1 text-white bg-success\\\" mat-raised-button mat-button (click)=\\\"openAddDialog()\\\">Add</button>\\n  <mat-form-field>\\n    <mat-label>Filter</mat-label>\\n    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. ium\\\">\\n  </mat-form-field>\\n</div>\\n\\n<table width=\\\"100%\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"id\\\" matSortDisableClear\\n  matSortDirection=\\\"desc\\\">\\n\\n  <!-- Number Column -->\\n  <ng-container matColumnDef=\\\"label\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Label</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.label}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"owner\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Owner</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.owner}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"balance\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Balance</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.balance}} {{row.currency}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"desc\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Description</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">{{row.desc}}</td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"status\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <span *ngIf=\\\"row.status\\\">Active</span>\\n      <span *ngIf=\\\"!row.status\\\">Inactive</span>\\n    </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"file\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>File</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <img height=\\\"50px\\\" src=\\\"http://localhost:8000{{row.file}}\\\">\\n    </td>\\n  </ng-container>\\n  <ng-container matColumnDef=\\\"id\\\">\\n    <th mat-header-cell *matHeaderCellDef mat-sort-header>Action</th>\\n    <td mat-cell *matCellDef=\\\"let row\\\">\\n      <button class=\\\"m-1 text-white bg-info\\\" mat-raised-button mat-button (click)=\\\"openEditDialog(row)\\\" align=\\\"end\\\" tabindex=\\\"-1\\\">Edit</button>\\n      <button class=\\\"m-1 text-white bg-danger\\\" mat-raised-button mat-button (click)=\\\"delete(row)\\\" align=\\\"end\\\" tabindex=\\\"-1\\\">Delete</button>\\n    </td>\\n  </ng-container>\\n\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n  <mat-paginator [length]=\\\"resultsLength\\\" [pageSize]=\\\"30\\\"></mat-paginator>\\n</table>\"","export default \"<h2 mat-dialog-title>Add Account</h2>\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n  <form class=\\\"example-container\\\" [formGroup]=\\\"accountFC\\\" enctype=\\\"multipart/form-data\\\"\\r\\n    (ngSubmit)=\\\"createAcc()\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"label\\\" placeholder=\\\"Label\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"textarea\\\" formControlName=\\\"owner\\\" placeholder=\\\"Owner\\\" required>\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <label>Status: </label>\\r\\n      <mat-checkbox formControlName=\\\"status\\\">Active</mat-checkbox>\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Currency</mat-label>\\r\\n      <mat-select name=\\\"currency\\\" formControlName=\\\"currency\\\">\\r\\n        <mat-option *ngFor=\\\"let i of ['USD', 'AF']\\\" [value]=\\\"i\\\">\\r\\n          {{i}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" step=\\\"50\\\" type=\\\"number\\\" formControlName=\\\"balance\\\" placeholder=\\\"Balance\\\" required>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"desc\\\" placeholder=\\\"Description\\\">\\r\\n    </mat-form-field>\\r\\n    <label for=\\\"form-image\\\">Upload Image</label>\\r\\n    <br>\\r\\n    <input id=\\\"form-image\\\" type=\\\"file\\\" (change)=\\\"onChangeFile($event)\\\" />\\r\\n    <br>\\r\\n    <span style=\\\"color: #e91e63;\\\" *ngIf=\\\"!isFormValid\\\">Choose a valid image file.</span>\\r\\n    <mat-dialog-actions align=\\\"end\\\">\\r\\n      <button [disabled]=\\\"!isFormValid\\\" align=\\\"end\\\" type=\\\"submit\\\" mat-button color=\\\"primary\\\">Create</button>\\r\\n      <button mat-button mat-dialog-close color=\\\"danger\\\">Cancel</button>\\r\\n    </mat-dialog-actions>\\r\\n\\r\\n  </form>\\r\\n    <br>\\r\\n    <p>\\r\\n      <ngb-alert *ngIf=\\\"apiErr\\\" [dismissible]=\\\"false\\\">\\r\\n        <span *ngFor=\\\"let item of apiErr | keyvalue\\\">\\r\\n          <li><strong>{{item.key}}: </strong>{{item.value}}</li>\\r\\n        </span>\\r\\n      </ngb-alert>\\r\\n    </p>\\r\\n\\r\\n</mat-dialog-content>\"","export default \"<h2 mat-dialog-title>Edit Account</h2>\\r\\n<mat-dialog-content class=\\\"mat-typography\\\">\\r\\n  <form class=\\\"example-container\\\" [formGroup]=\\\"accountFC\\\" enctype=\\\"multipart/form-data\\\"\\r\\n    (ngSubmit)=\\\"updateAcc(data)\\\">\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"label\\\" placeholder=\\\"Label\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"textarea\\\" formControlName=\\\"owner\\\" placeholder=\\\"Owner\\\" required>\\r\\n    </mat-form-field>\\r\\n    <div>\\r\\n      <label>Status: </label>\\r\\n      <mat-checkbox formControlName=\\\"status\\\">Active</mat-checkbox>\\r\\n    </div>\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"number\\\" formControlName=\\\"balance\\\" placeholder=\\\"Balance\\\" required>\\r\\n    </mat-form-field>\\r\\n        <mat-form-field>\\r\\n          <mat-label>Currency</mat-label>\\r\\n          <mat-select name=\\\"currency\\\" formControlName=\\\"currency\\\">\\r\\n            <mat-option *ngFor=\\\"let i of ['USD', 'AF']\\\" [value]=\\\"i\\\">\\r\\n              {{i}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"desc\\\" placeholder=\\\"Description\\\" >\\r\\n    </mat-form-field>\\r\\n    <label for=\\\"form-image\\\">Upload Image</label>\\r\\n    <br>\\r\\n    <span>\\r\\n      <span style=\\\"color: #e91e63;\\\" *ngIf=\\\"!isFormValid\\\">Choose a valid image file.</span>\\r\\n      <span *ngIf=\\\"isFormValid\\\" (click)=\\\"removeFile(data)\\\">\\r\\n        Currently: \\r\\n        <img height=\\\"50px\\\" src=\\\"http://localhost:8000{{data.file}}\\\">\\r\\n      </span>\\r\\n    </span>\\r\\n    <br>\\r\\n    <input id=\\\"form-image\\\" type=\\\"file\\\" (change)=\\\"onUpdateFile($event)\\\" />\\r\\n    <br>\\r\\n    <mat-dialog-actions align=\\\"end\\\">\\r\\n      <button [disabled]=\\\"!isFormValid\\\"  align=\\\"end\\\" type=\\\"submit\\\" mat-button color=\\\"primary\\\">Update</button>\\r\\n      <button mat-button mat-dialog-close>Cancel</button>\\r\\n    </mat-dialog-actions>\\r\\n  </form>\\r\\n  <br>\\r\\n  <p>\\r\\n    <ngb-alert *ngIf=\\\"apiErr\\\" [dismissible]=\\\"false\\\">\\r\\n      <span *ngFor=\\\"let item of apiErr | keyvalue\\\">\\r\\n        <li><strong>{{item.key}}: </strong>{{item.value}}</li>\\r\\n      </span>\\r\\n    </ngb-alert>\\r\\n  </p>\\r\\n</mat-dialog-content>\"","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWNjb3VudC9hY2NvdW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject, Output, Input, ViewChild } from '@angular/core';\nimport { ApiService } from '../../api.service';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { find, findIndex } from 'rxjs/operators';\nimport { ToastService } from '../../shared/toast/toast-service';\nimport { ChartOptions } from 'ng-chartist';\nimport { Label, SingleDataSet, monkeyPatchChartJsLegend, monkeyPatchChartJsTooltip } from 'ng2-charts';\nimport { ChartType } from 'chart.js';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\nexport class AccountComponent implements OnInit {\n  // Define all the variable\n  @Output() accounts: any\n\n  // Define all the variable\n  displayedColumns: string[] = ['label', 'owner', 'balance', 'status', 'desc', 'file', 'id'];\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  isRateLimitReached = false;\n  // Build the table data source based on table data.\n  tableData: any = [];\n  dataSource = new MatTableDataSource(this.tableData);\n\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) msort: MatSort;\n\n  // Pie\n  singleDataSet = [];\n  labels = [];\n  singleDataSetAf = [];\n  labelsAf = [];\n  public pieChartOptions: ChartOptions = {\n    // responsive: true,\n  };\n  public pieChartColors: Array<any> = [{\n    backgroundColor: [\"#FFCC99\", \"#FFCC66\", \"#CC9999\", \"#CC99CC\", \"#CCFF00\", \"#FF66FF\", \"#FF66CC\", \"#CC3300\", \"#CC3333\", \"#CCFFCC\", \"#CCFFFF\", \"#FF9999\", \"#FF9966\", \"#CC6633\", \"#CC6666\", \"#FFFF66\", \"#FFFF33\", \"#FFFF00\", \"#CCCC99\", \"#CCCCCC\", \"#FF33FF\", \"#FF33CC\", \"#FF3300\", \"#CC0000\", \"#CC00CC\", \"#CC00FF\", \"#FF0033\" ],\n  }];\n  public pieChartLabels: Label[] = this.labels;\n  public pieChartData: SingleDataSet = this.singleDataSet;\n  public pieChartType: ChartType = 'pie';\n  public pieChartLegend = true;\n  public pieChartPlugins = [];\n\n\n  public pieChartAfOptions: ChartOptions = {\n    // responsive: true,\n  };\n  public pieChartAfColors: Array<any> = [{\n    backgroundColor: [\"#009999\", \"#339900\", \"#339999\", \"#330000\", \"#009966\", \"#CCCCCC\", \"#33CC66\", \"#FF33CC\", \"#FF3300\", \"#CC0000\", \"#CC00CC\", \"#CC00FF\", \"#FF0033\"],\n  }];\n  public pieChartAfLabels: Label[] = this.labelsAf;\n  public pieChartAfData: SingleDataSet = this.singleDataSetAf;\n  public pieChartAfType: ChartType = 'pie';\n  public pieChartAfLegend = true;\n  public pieChartAfPlugins = [];\n  constructor(\n    private apiService: ApiService,\n    public dialog: MatDialog,\n    private toast: ToastService,\n\n  ) { \n    monkeyPatchChartJsTooltip();\n    monkeyPatchChartJsLegend();\n  }\n\n  ngOnInit() {\n    this.loadAccounts();\n    \n  }\n\n\n  loadAccounts() {\n    this.apiService.loadAll('acnt').subscribe(\n      result => {\n        this.dataSource.data = result;\n        this.dataSource.sort = this.msort;\n        result.forEach(e => {\n          if (e.currency == \"USD\") {\n            this.labels.push(e.label);\n            this.singleDataSet.push(e.balance);\n          }\n          else{\n            this.labelsAf.push(e.label);\n            this.singleDataSetAf.push(e.balance);\n\n          }\n        });\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  openAddDialog() {\n    const dialogRef = this.dialog.open(AddDialog, {\n      // maxHeight: '80%',\n      // maxWidth: '80%',\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      // Do nothing on cancel and if it return value update table.\n      if (result) {\n        this.addToTable(result);\n      }\n    });\n  }\n\n  // Update handling Serverside and client side.\n  openEditDialog(data) {\n\n    const dialogRef = this.dialog.open(EditDialog, {\n      data: data,\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.updateTable(data, result);\n      }\n    });\n  }\n\n  // Delete Item From Server.\n  delete(row) {\n    if (confirm('Are sure to delete?')) {\n      this.apiService.delete(row.id, 'acnt').subscribe(\n        result => {\n          this.deleteUI(row);\n          this.toast.show('Account deleted successfully!',\n            { classname: 'bg-warning text-light', delay: 5000 }\t\n          );\n        }\n      );\n    }\n  }\n\n  // Delete Item From UI\n  deleteUI(row) {\n    this.tableData = this.dataSource.data;\n    let index: number = this.tableData.findIndex(data => data === row);\n    this.tableData.splice(index, 1);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  addToTable(data) {\n    this.tableData = this.dataSource.data;\n    this.dataSource.data = this.tableData.push(data);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  updateTable(oldRow, newRow) {\n    this.tableData = this.dataSource.data;\n    // Remove the old data from table.\n    let index: number = this.tableData.findIndex(data => data === oldRow);\n    this.tableData.splice(index, 1);\n    // Add update row.\n    this.dataSource.data = this.tableData.push(newRow);\n    this.dataSource = new MatTableDataSource<any>(this.tableData);\n    this.dataSource.sort = this.msort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n}\n\n\nexport interface DialogData { }\n\n@Component({\n  selector: 'add-dialog',\n  templateUrl: 'add-dialog.html',\n})\nexport class AddDialog {\n  isFormValid: boolean = true;\n  isNewFile: boolean = false;\n  apiErr;\n  constructor(\n    private apiService: ApiService,\n    private toast: ToastService,\n    public dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) { }\n\n  accountFC = new FormGroup({\n    label: new FormControl(''),\n    owner: new FormControl(''),\n    balance: new FormControl(''),\n    currency: new FormControl(''),\n    desc: new FormControl(''),\n    status: new FormControl(''),\n    file: new FormControl(Validators.required),\n  });\n  fields = ['label', 'owner', 'balance', 'currency', 'desc', 'status', 'file'];\n\n  onChangeFile(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      if (file.type == 'image/jpeg' || file.type == 'image/png') {\n        this.accountFC.get('file').setValue(file);\n        this.isFormValid = true;\n        this.isNewFile = true;\n      } else {\n        this.isFormValid = false;\n        this.isNewFile = false;\n      }\n      \n    }\n  }\n\n  createAcc() {\n    let formData = this.formFieldData();\n    \n    this.apiService.create(formData, 'acnt').subscribe(\n      (result: any) => {\n        if (result.error) {\n        }\n        else {\n          this.toast.show('New account created successfully!',\n            { classname: 'bg-success text-light', delay: 5000 }\n          );\n          this.dialogRef.close(result);\n        }\n        \n      },\n      (err) => {\n        this.apiErr = err.error;\n      }\n    );\n  }\n  formFieldData() {\n    let formData = new FormData();\n    this.fields.forEach(element => {\n      if (element == \"file\") {\n        if (this.isNewFile) {\n          formData.append(element, this.accountFC.get(element).value);\n        }\n      }\n      else {\n        formData.append(element, this.accountFC.get(element).value);\n      }\n    });\n    return formData;\n  }\n\n}\n\nexport interface DialogData { }\n@Component({\n  selector: 'edit-dialog',\n  templateUrl: 'edit-dialog.html',\n})\nexport class EditDialog implements OnInit{\n  \n  editData : any;\n  isFormValid: boolean = true;\n  isNewFile: boolean = false;\n\n  apiErr;\n\n  constructor(\n    private apiService: ApiService,\n    public dialogRef: MatDialogRef<any>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData\n  ) { }\n\n  accountFC = new FormGroup({\n    label: new FormControl(''),\n    owner: new FormControl(''),\n    balance: new FormControl(''),\n    currency: new FormControl(''),\n    desc: new FormControl(''),\n    status: new FormControl(''),\n    file: new FormControl(Validators.required),\n  });\n  fields = ['label', 'owner', 'balance', 'currency', 'desc', 'status', 'file'];\n\n  ngOnInit(){\n\n    // Assign Dialog data to new variable.\n    // Because it return error when trying to get data.\n    this.editData = this.data;\n    this.accountFC.setValue({\n      label: this.editData.label,\n      owner: this.editData.owner,\n      currency: this.editData.currency,\n      balance: this.editData.balance,\n      desc: this.editData.desc,\n      status: this.editData.status,\n      file: this.editData.file,\n    });\n    \n  }\n\n  onUpdateFile(event) {\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      console.log(file);\n      \n      if (file.type == 'image/jpeg' || file.type == 'image/png') {\n        this.isFormValid = true;\n        this.isNewFile = true;\n        this.accountFC.get('file').setValue(file);\n      } else {\n        this.isFormValid = false;\n        this.isNewFile = false;\n      }\n\n    }\n  }\n\n  updateAcc(data) {\n    let formData = this.formFieldData();\n    console.log(formData);\n    \n    this.apiService.update(data.id, formData, 'acnt').subscribe(\n      (result: any) => {\n        if (result.error) {\n          console.log(result);\n          \n          this.apiErr = result.error;\n        }\n        else {\n          this.dialogRef.close(result);\n        }\n      },\n      error => {\n        if(error.status == 400){\n          this.apiErr = error.error;\n        }\n        if (error.status == 401) {\n          this.dialogRef.close();\n        }\n      }\n    );\n  }\n  removeFile(data) {\n\n  }\n  formFieldData() {\n    let formData = new FormData();\n    this.fields.forEach(element => {\n      if (element == \"file\") {\n        \n        if (this.isNewFile) {\n          formData.append(element, this.accountFC.get(element).value);\n        }\n      }\n      else {\n        formData.append(element, this.accountFC.get(element).value);\n      }\n    });\n    return formData;\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AccountComponent, AddDialog, EditDialog,  } from './account.component';\nimport { MaterialModule } from '../../material-module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NgbAlertModule, NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ChartsModule } from 'ng2-charts';\nimport { ChartistModule } from 'ng-chartist';\n\n\nexport const AccountRoutes: Routes = [{\n  path: '',\n  component: AccountComponent\n}];\n\n@NgModule({\n  declarations: [\n    AccountComponent,\n    AddDialog,\n    EditDialog,\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    ChartistModule,\n    ChartsModule,\n    RouterModule.forChild(AccountRoutes)\n  ],\n  entryComponents: [\n    AddDialog,\n    EditDialog,\n  ],\n  exports: [],\n  bootstrap: []\n})\nexport class AccountModule { }\n"],"sourceRoot":"webpack:///"}