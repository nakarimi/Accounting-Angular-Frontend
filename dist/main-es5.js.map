{"version":3,"sources":["src/app/app.component.html","src/app/auth/auth.component.html","src/app/components/report/report.component.html","src/app/layouts/full/full.component.html","src/app/layouts/full/header/header.component.html","src/app/layouts/full/header/profile.component.html","src/app/layouts/full/sidebar/sidebar.component.html","src/app/shared/toast/toast-global.component.html","src/app/test/test.component.html","src/$_lazy_route_resource lazy namespace object","src/app/api.service.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/app.routing.ts","src/app/auth/auth.component.css","src/app/auth/auth.component.ts","src/app/auth/auth.module.ts","src/app/components/report/report.component.css","src/app/components/report/report.component.ts","src/app/http-error.interceptor.ts","src/app/layouts/full/full.component.ts","src/app/layouts/full/header/header.component.ts","src/app/layouts/full/sidebar/sidebar.component.ts","src/app/material-module.ts","src/app/shared/accordion/accordion.directive.ts","src/app/shared/accordion/accordionanchor.directive.ts","src/app/shared/accordion/accordionlink.directive.ts","src/app/shared/global-constants.ts","src/app/shared/menu-items/menu-items.ts","src/app/shared/shared.module.ts","src/app/shared/spinner.component.ts","src/app/shared/toast/toast-global.component.ts","src/app/shared/toast/toast-global.module.ts","src/app/shared/toast/toast-service.ts","src/app/shared/toast/toasts-container.component.ts","src/app/test/test.component.css","src/app/test/test.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<!-- ============================================================== -->\\r\\n<!-- Main wrapper - style you can find in pages.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<router-outlet>\\r\\n  <app-toasts aria-live=\\\"polite\\\" aria-atomic=\\\"true\\\"></app-toasts>\\r\\n  <app-spinner></app-spinner>\\r\\n</router-outlet>\"","export default \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n    <mat-card >\\r\\n        <mat-card-header>\\r\\n            <div mat-card-avatar class=\\\"example-header-image\\\" style=\\\"width: 100%; text-align: center;height: 100px;\\\">\\r\\n                <img src=\\\"../../assets/images/background/user-info.jpg\\\" alt=\\\"\\\">\\r\\n            </div>\\r\\n        </mat-card-header>\\r\\n        <mat-card-content>\\r\\n        <form *ngIf=\\\"loginAction\\\" [formGroup]=\\\"authForm\\\" (ngSubmit)=\\\"authentication()\\\">\\r\\n                <mat-form-field>\\r\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" required placeholder=\\\"Username\\\" matInput />\\r\\n                </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" required placeholder=\\\"Password\\\" matInput />\\r\\n                </mat-form-field>\\r\\n                <button *ngIf=\\\"authForm.valid\\\" class=\\\"m-1 text-white bg-success\\\" type=\\\"submit\\\" mat-button>Login</button>\\r\\n                <button *ngIf=\\\"authForm.invalid\\\" class=\\\"m-1 text-white bg-danger\\\" disabled mat-button>Login</button>\\r\\n            </form>\\r\\n            <form *ngIf=\\\"!loginAction && !resetToken\\\" [formGroup]=\\\"forgotPassForm\\\" (ngSubmit)=\\\"forgotPassword()\\\">\\r\\n                <mat-form-field>\\r\\n                    <mat-label>Email</mat-label>\\r\\n                    <input type=\\\"email\\\" autocomplete=\\\"off\\\" formControlName=\\\"email\\\" required matInput />\\r\\n                </mat-form-field>\\r\\n\\r\\n                <button *ngIf=\\\"forgotPassForm.valid\\\" class=\\\"m-1 text-white bg-success\\\" type=\\\"submit\\\" mat-button>Send</button>\\r\\n                <button *ngIf=\\\"forgotPassForm.invalid\\\" class=\\\"m-1 text-white bg-danger\\\" disabled type=\\\"submit\\\" mat-button>Send</button>\\r\\n            </form>\\r\\n            <form *ngIf=\\\"!loginAction && resetToken\\\" (ngSubmit)=\\\"resetforgotPassword()\\\" [formGroup]=\\\"resetPassForm\\\">\\r\\n                <mat-form-field>\\r\\n                <mat-label>Password</mat-label>\\r\\n                <input type=\\\"password\\\" autocomplete=\\\"off\\\" formControlName=\\\"password\\\" required matInput \\r\\n                    [errorStateMatcher]=\\\"matcher\\\">\\r\\n                    <mat-error *ngIf=\\\"resetPassForm.get('password').errors && resetPassForm.get('password').errors.required\\\">\\r\\n                        Password is required.\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"resetPassForm.get('password').errors && resetPassForm.get('password').errors.minlength\\\">\\r\\n                        This password is too short. It must contain at least 8 characters.\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"resetPassForm.get('password').errors && resetPassForm.get('password').errors.maxlength\\\">\\r\\n                        Password must be at most 25 characters long.\\r\\n                    </mat-error>\\r\\n                    <mat-error *ngIf=\\\"resetPassForm.get('password').errors && resetPassForm.get('password').errors.pattern && !resetPassForm.get('password').errors.minlength\\\">\\r\\n                        This password is too common, use atleast one number, upper and lower char.\\r\\n                    </mat-error>\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <button *ngIf=\\\"resetPassForm.valid\\\" class=\\\"m-1 text-white bg-success\\\" type=\\\"submit\\\" mat-button>Send</button>\\r\\n            <button *ngIf=\\\"resetPassForm.invalid\\\" class=\\\"m-1 text-white bg-danger\\\" disabled type=\\\"submit\\\" mat-button>Send</button>\\r\\n        </form>\\r\\n        <span class=\\\"float-right loginActionToggle m-2\\\" (click)=\\\"loginActionToggle()\\\">\\r\\n            <a class=\\\"cus-cursor-pointer m-2\\\" *ngIf=\\\"!loginAction\\\">Login</a>\\r\\n            <a class=\\\"cus-cursor-pointer m-2\\\" *ngIf=\\\"loginAction\\\">Forgot Password</a>\\r\\n        </span>\\r\\n    </mat-card-content>\\r\\n    </mat-card>\\r\\n</div>\\r\\n<ng-template #snackBarTemplate>\\r\\n    Hi\\r\\n</ng-template>\"","export default \"<div class=\\\"container mat-typography \\\">\\n  <form [formGroup]=\\\"reportFC\\\">\\n    <div class=\\\"col-5\\\">\\n\\n    <mat-form-field>\\n      <mat-label>Start</mat-label>\\n      <input matInput [max]=\\\"(endDate)? endDate.value : ''\\\" [matDatepicker]=\\\"pickerStart\\\" formControlName=\\\"startDate\\\"\\n        required>\\n      <mat-datepicker-toggle matSuffix [for]=\\\"pickerStart\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #pickerStart></mat-datepicker>\\n    </mat-form-field>\\n    </div>\\n    <div class=\\\"col-5\\\">\\n\\n    <mat-form-field>\\n      <mat-label>End</mat-label>\\n      <input matInput [min]=\\\"(startDate)? startDate.value : ''\\\" [matDatepicker]=\\\"pickerEnd\\\" formControlName=\\\"endDate\\\"\\n        required>\\n      <mat-datepicker-toggle matSuffix [for]=\\\"pickerEnd\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #pickerEnd></mat-datepicker>\\n    </mat-form-field>\\n    </div>\\n    <div class=\\\"col-5\\\">\\n\\n    <mat-form-field>\\n      <mat-label>Currency</mat-label>\\n      <mat-select formControlName=\\\"currency\\\" required>\\n        <mat-option *ngFor=\\\"let i of ['USD', 'AF']\\\" [value]=\\\"i\\\">\\n          {{i}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    </div>\\n  </form>\\n  <div class=\\\"col-auto\\\">\\n    <button type=\\\"submit\\\" class=\\\"m-1 bg-info text-white\\\" [ngClass]=\\\"{'bg-danger': reportFC.invalid}\\\" [disabled]=\\\"reportFC.invalid\\\" (click)=\\\"invoiceReport()\\\" mat-raised-button mat-button>Invoice Report</button>\\n    <button type=\\\"submit\\\" class=\\\"m-1 bg-info text-white\\\" [ngClass]=\\\"{'bg-danger': reportFC.invalid}\\\" [disabled]=\\\"reportFC.invalid\\\" (click)=\\\"billReport()\\\" mat-raised-button mat-button>Bill Report</button>\\n    <button type=\\\"submit\\\" class=\\\"m-1 bg-info text-white\\\" [ngClass]=\\\"{'bg-danger': reportFC.invalid}\\\" [disabled]=\\\"reportFC.invalid\\\" (click)=\\\"paymentReport()\\\" mat-raised-button mat-button>Payment Report</button>\\n  </div>\\n</div>\"","export default \"<!-- ============================================================== -->\\r\\n<!-- Main wrapper - style you can find in pages.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<div class=\\\"main-container\\\"> \\r\\n    <!-- ============================================================== -->\\r\\n    <!-- Topbar - style you can find in header.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"topbar telative\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- sidebar toggle -->\\r\\n        <!-- ============================================================== -->\\r\\n        \\r\\n        <button mat-icon-button (click)=\\\"snav.toggle()\\\" value=\\\"sidebarclosed\\\">\\r\\n            <mat-icon>menu</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        \\r\\n\\r\\n\\r\\n        <span fxFlex></span>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\\r\\n        <!-- ============================================================== -->\\r\\n        <app-header></app-header>\\r\\n    </mat-toolbar>\\r\\n    <!-- ============================================================== -->\\r\\n    <!-- End Topbar - style you can find in pages.scss -->\\r\\n    <!-- ============================================================== -->\\r\\n    <mat-sidenav-container class=\\\"example-sidenav-container\\\" [style.marginTop.px]=\\\"mobileQuery.matches ? 0 : 0\\\">\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav #snav id=\\\"snav\\\" class=\\\"dark-sidebar pl-xs\\\" [mode]=\\\"mobileQuery.matches ? 'side' : 'over'\\\" fixedTopGap=\\\"0\\\" [opened]=\\\"mobileQuery.matches\\\" [disableClose]=\\\"mobileQuery.matches\\\"  >\\r\\n            <app-sidebar></app-sidebar>\\r\\n        </mat-sidenav>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Sidebar - style you can find in sidebar.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        \\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n        <mat-sidenav-content class=\\\"page-wrapper\\\">\\r\\n                 \\r\\n                <div class=\\\"page-content\\\">\\r\\n                   \\r\\n                        <router-outlet><app-spinner></app-spinner></router-outlet>\\r\\n                    \\r\\n                </div>    \\r\\n               \\r\\n        </mat-sidenav-content>\\r\\n        <!-- ============================================================== -->\\r\\n        <!-- Page container - style you can find in pages.scss -->\\r\\n        <!-- ============================================================== -->\\r\\n    </mat-sidenav-container>\\r\\n</div>\"","export default \"        \\r\\n<!-- ============================================================== -->\\r\\n<!-- Profile - style you can find in header.scss -->\\r\\n<!-- ============================================================== -->\\r\\n<button [matMenuTriggerFor]=\\\"profile\\\" mat-icon-button class=\\\"m-r-5\\\">\\r\\n    <mat-icon>account_circle</mat-icon>\\r\\n</button>\\r\\n<mat-menu #profile=\\\"matMenu\\\" class=\\\"mymegamenu\\\">\\r\\n    <!-- <button mat-menu-item>\\r\\n        <mat-icon>settings</mat-icon> Settings </button> -->\\r\\n    <button mat-menu-item (click)=\\\"goToUserProfile(false)\\\">\\r\\n        <mat-icon>account_box</mat-icon> Profile </button>\\r\\n        \\r\\n    <button mat-menu-item (click)=\\\"goToUserProfile(true)\\\">\\r\\n        <mat-icon>lock</mat-icon> Change Password\\r\\n    </button>\\r\\n    <a *ngxPermissionsOnly=\\\"['ADMIN']\\\" mat-menu-item href=\\\"/user\\\">\\r\\n        <mat-icon>people_alt</mat-icon> Users\\r\\n    </a>\\r\\n    <button mat-menu-item (click)=\\\"logOutUser()\\\">\\r\\n        <mat-icon>exit_to_app</mat-icon> Sign Out </button>\\r\\n</mat-menu>\\r\\n\\r\\n\"","export default \"<mat-dialog-content *ngIf=\\\"!dData.type\\\" class=\\\"mat-typography\\\">\\r\\n  <h2 mat-dialog-title>Profile</h2>\\r\\n  <form [formGroup]=\\\"profileFC\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"profileOperation()\\\">\\r\\n    <mat-form-field>\\r\\n      <mat-label>Username</mat-label>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"username\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n        <mat-error *ngIf=\\\"profileFC.get('username').errors && profileFC.get('username').errors.required\\\">\\r\\n          Username is required.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"profileFC.get('username').errors && profileFC.get('username').errors.minlength\\\">\\r\\n          Username must be at least 3 characters long.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"profileFC.get('username').errors && profileFC.get('username').errors.maxlength\\\">\\r\\n          Username must be at most 25 characters long.\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Email</mat-label>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"email\\\" formControlName=\\\"email\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n        <mat-error *ngIf=\\\"profileFC.get('email').errors && profileFC.get('email').errors.required\\\">\\r\\n          Email is required.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"profileFC.get('email').errors && profileFC.get('email').errors.email\\\">\\r\\n          Use email with correct format.\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-label>First Name</mat-label>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"first_name\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n        <mat-error *ngIf=\\\"profileFC.get('first_name').errors && profileFC.get('first_name').errors.required\\\">\\r\\n          First Name is required.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"profileFC.get('first_name').errors && profileFC.get('first_name').errors.minlength\\\">\\r\\n          First Name must be at least 3 characters long.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"profileFC.get('first_name').errors && profileFC.get('first_name').errors.maxlength\\\">\\r\\n          First Name must be at most 25 characters long.\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Last Name</mat-label>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"text\\\" formControlName=\\\"last_name\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n        <mat-error *ngIf=\\\"profileFC.get('last_name').errors && profileFC.get('last_name').errors.required\\\">\\r\\n          Last Name is required.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"profileFC.get('last_name').errors && profileFC.get('last_name').errors.minlength\\\">\\r\\n          Last Name must be at least 3 characters long.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"profileFC.get('last_name').errors && profileFC.get('last_name').errors.maxlength\\\">\\r\\n          Last Name must be at most 25 characters long.\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"m-1\\\">\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"m-r-10 text-white\\\"\\r\\n        [ngClass]=\\\"{'bg-danger': profileFC.invalid, 'bg-info': profileFC.valid}\\\" [disabled]=\\\"profileFC.invalid\\\">Update</button>\\r\\n      <button mat-button mat-dialog-close class=\\\"bg-warning text-white\\\">Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-content *ngIf=\\\"dData.type\\\" class=\\\"mat-typography\\\">\\r\\n  <h2 mat-dialog-title>Change Password</h2>\\r\\n  <form [formGroup]=\\\"chPassFC\\\" enctype=\\\"multipart/form-data\\\" (ngSubmit)=\\\"profileOperation('pass')\\\">\\r\\n    <mat-form-field>\\r\\n      <mat-label>Old Password</mat-label>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"password\\\" formControlName=\\\"oldpassword\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n        <mat-error *ngIf=\\\"chPassFC.get('oldpassword').errors && chPassFC.get('oldpassword').errors.required\\\">\\r\\n          Old Password is required.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"chPassFC.get('oldpassword').errors && chPassFC.get('oldpassword').errors.minlength\\\">\\r\\n          Old Password must be at least 3 characters long.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"chPassFC.get('oldpassword').errors && chPassFC.get('oldpassword').errors.maxlength\\\">\\r\\n          Old Password must be at most 25 characters long.\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-label>New Password</mat-label>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"password\\\" formControlName=\\\"password\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n        <mat-error *ngIf=\\\"chPassFC.get('password').errors && chPassFC.get('password').errors.required\\\">\\r\\n          Password is required.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"chPassFC.get('password').errors && chPassFC.get('password').errors.minlength\\\">\\r\\n          This password is too short. It must contain at least 8 characters.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"chPassFC.get('password').errors && chPassFC.get('password').errors.maxlength\\\">\\r\\n          Password must be at most 25 characters long.\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"chPassFC.get('password').errors && chPassFC.get('password').errors.pattern\\\">\\r\\n          This password is too common, use atleast one number, upper and lower char.\\r\\n        </mat-error>\\r\\n    </mat-form-field>\\r\\n    <mat-form-field>\\r\\n      <mat-label>Confirm Password</mat-label>\\r\\n      <input matInput autocomplete=\\\"off\\\" type=\\\"password\\\" formControlName=\\\"confirmPassword\\\"\\r\\n        [errorStateMatcher]=\\\"matcher\\\">\\r\\n      <mat-error>\\r\\n        Passwords do not match, please check passwords and try again.\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n    <div class=\\\"m-1\\\">\\r\\n      <button type=\\\"submit\\\" mat-button class=\\\"m-r-10 text-white\\\" [ngClass]=\\\"{'bg-danger': chPassFC.invalid, 'bg-info': chPassFC.valid}\\\" [disabled]=\\\"chPassFC.invalid\\\">Update</button>\\r\\n      <button mat-button mat-dialog-close class=\\\"bg-warning text-white\\\">Cancel</button>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-dialog-content>\"","export default \"<!-- ============================================================== -->\\r\\n<!-- sidebar -->\\r\\n<!-- ============================================================== -->\\r\\n<mat-nav-list appAccordion>\\r\\n    <mat-list-item appAccordionLink *ngFor=\\\"let menuitem of menuItems.getMenuitem()\\\" routerLinkActive=\\\"selected\\\" group=\\\"{{menuitem.state}}\\\">\\r\\n        <span *ngxPermissionsOnly=\\\"menuitem.perm\\\">\\r\\n            <a [ngClass]=\\\"'sidebar-menu'\\\" appAccordionToggle [routerLink]=\\\"['/', menuitem.state]\\\" *ngIf=\\\"menuitem.type === 'link'\\\">\\r\\n                <mat-icon>{{ menuitem.icon }}</mat-icon> \\r\\n                <span [ngClass]=\\\"'sidebar-menu-text'\\\">{{ menuitem.name }}</span> \\r\\n            </a>\\r\\n        </span>\\r\\n        <!-- <span class=\\\"sub-item\\\">\\r\\n            <mat-list-item appAccordionLink *ngFor=\\\"let subitem of menuitem.submenu\\\" routerLinkActive=\\\"selected\\\"\\r\\n                group=\\\"{{subitem.state}}\\\">\\r\\n                <a [ngClass]=\\\"'sidebar-menu'\\\" appAccordionToggle [routerLink]=\\\"['/', subitem.state]\\\"\\r\\n                    *ngIf=\\\"subitem.type === 'link'\\\">\\r\\n                    <span [ngClass]=\\\"'sidebar-sub-menu-text'\\\">{{ subitem.name }}</span>\\r\\n                </a>\\r\\n            </mat-list-item>\\r\\n        </span> -->\\r\\n    </mat-list-item>\\r\\n</mat-nav-list>\"","export default \"<p>Please click one of the button to see a Toast being displayed in the top right corner of your screen:</p>\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"showStandard(msg)\\\" ngbTooltip=\\\"Will disappear in 5s\\\">Standard toast</button>&nbsp;\\r\\n<button class=\\\"btn btn-success\\\" (click)=\\\"showSuccess(msg)\\\" ngbTooltip=\\\"Will disappear in 10s\\\">Success toast</button>&nbsp;\\r\\n\\r\\n<ng-template #dangerTpl>\\r\\n  <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#fff\\\" width=\\\"24\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\">\\r\\n    <path\\r\\n      d=\\\"M10.872 6.831l1.695 3.904 3.654-1.561-1.79 3.426 3.333.954-3.417 1.338 2.231 4.196-4.773-2.582-2.869 2.287.413-3.004-3.792-.726 2.93-1.74-1.885-2.512 3.427.646.843-4.626zm-.786-6.831l-1.665 9.119-6.512-1.228 3.639 4.851-5.548 3.294 7.108 1.361-.834 6.076 5.742-4.577 9.438 5.104-4.288-8.064 6.834-2.677-6.661-1.907 3.25-6.22-6.98 2.982-3.523-8.114z\\\" />\\r\\n    </svg>\\r\\n  Danger Danger !\\r\\n</ng-template>\\r\\n<button class=\\\"btn btn-danger\\\" (click)=\\\"showDanger(dangerTpl, msg)\\\" ngbTooltip=\\\"Will disappear in 15s\\\">Danger\\r\\n  toast</button>&nbsp;\\r\\n\\r\\n<app-toasts aria-live=\\\"polite\\\" aria-atomic=\\\"true\\\"></app-toasts>\"","export default \"<p>test works!</p>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable, ViewChild } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { CookieService } from \"ngx-cookie-service\";\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { environment } from '../environments/environment';\nimport { Router } from '@angular/router';\n\n\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class ApiService {\n  \n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  constructor(\n      private httpClient: HttpClient,\n    private cookieService: CookieService,\n    private router: Router,\n    // private sp: SpinnerComponent,\n    ) {}\n    \n  apiUrl = environment.serverUrl;\n\n  getToken(authData) {\n    const body = JSON.stringify(authData);\n    const token = this.httpClient.post(`${this.apiUrl}token/`, body, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n      })\n    });\n    return token;\n  }\n\n  registerUser(authData) {\n    const body = JSON.stringify(authData);\n    let h;\n    h = {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + this.cookieService.get('auth-token'),\n      })\n    }\n    const user = this.httpClient.post(`${this.apiUrl}users/`, body, h);\n    return user;\n  }\n\n  // Get all companies from backend.\n  loadAll(entity, sort = '', order= '', page = '') {\n    const requestUrl = `${this.apiUrl}${entity}/`;\n    let h;\n    h = {\n      headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": \"Bearer \" + this.cookieService.get('auth-token'),\n      })\n    }\n    return this.httpClient.get<any>(requestUrl, h);\n  }\n  // Delete item based on content type.\n  delete(id, type) {\n    const resp = this.httpClient.delete(`${this.apiUrl}${type}/${id}/`, {\n      headers: new HttpHeaders({\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + this.cookieService.get('auth-token'),\n      }),\n      'responseType': 'text'\n    });\n    return resp;\n  }\n  // Delete item based on content type.\n  update(id, data, type) {\n\n    return this.httpClient.put(`${this.apiUrl + type}/${id}/`, data, {\n      headers: new HttpHeaders({\n        \"Authorization\": \"Bearer \" + this.cookieService.get('auth-token'),\n      }),\n    });\n  }\n\n  parUpdate(id, data, type) {\n\n    return this.httpClient.patch(`${this.apiUrl + type}/${id}/`, data, {\n      headers: new HttpHeaders({\n        \"Authorization\": \"Bearer \" + this.cookieService.get('auth-token'),\n      }),\n    });\n  }\n\n  // Delete item based on content type.\n  create(data, type) {    \n\n    return this.httpClient.post(`${this.apiUrl + type}/`, data, {\n      headers: new HttpHeaders({\n        \"Authorization\": \"Bearer \" + this.cookieService.get('auth-token'),\n      }),\n    });\n  }\n\n  retrive(entity, id){\n    const requestUrl = `${this.apiUrl}${entity}?entity_id=${id}`;\n    return this.httpClient.get<any>(requestUrl);\n  }\n\n  refreshToken() {\n    var formdata = { \"refresh\": this.cookieService.get('refresh-token')};    \n    const respData = this.httpClient.post(`${this.apiUrl}token/refresh/`, formdata, {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n      }),\n    });\n    respData.subscribe(\n      result => {\n        // Update the access token again.\n        var date = new Date();\n        date.setTime(date.getTime() + 600 * 1000);\n        this.cookieService.set(\"auth-token\", result[\"access\"], date);\n      },\n      error => {\n        this.router.navigate(['/login']);\n      }\n    );\n    return respData;\n  }\n\n}\n","export default \".ngb-toasts {\\r\\n    position: absolute;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    top: unset;\\r\\n}\\r\\n\\r\\n.toast:not(:last-child) {\\r\\n  display: none !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIsU0FBUztJQUNULE9BQU87SUFDUCxVQUFVO0FBQ2Q7O0FBRUE7RUFDRSx3QkFBd0I7QUFDMUIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uZ2ItdG9hc3RzIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJvdHRvbTogMDtcclxuICAgIGxlZnQ6IDA7XHJcbiAgICB0b3A6IHVuc2V0O1xyXG59XHJcblxyXG4udG9hc3Q6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59Il19 */\"","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgxPermissionsService } from 'ngx-permissions';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ApiService } from './api.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'accountingAng';\r\n  perm = [\"GUEST\"];\r\n\r\n  constructor(\r\n    private cookieService: CookieService,\r\n    private api: ApiService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  logoutUser() {\r\n    this.cookieService.delete('auth-token');\r\n    console.log('Logout Successfully!');\r\n  }\r\n}\r\n","\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS , HttpClient } from '@angular/common/http';\r\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\r\nimport { AppRoutes } from './app.routing';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AppHeaderComponent, ProfileDialog } from './layouts/full/header/header.component';\r\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material-module';\r\n\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { SpinnerComponent } from './shared/spinner.component';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { HttpErrorInterceptor } from './http-error.interceptor';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ToastsContainer } from './shared/toast/toasts-container.component';\r\nimport { NgbdToastGlobalModule } from './shared/toast/toast-global.module';\r\nimport { NgbdToastGlobal } from './shared/toast/toast-global.component';\r\nimport { NgxPermissionsModule } from 'ngx-permissions';\r\nimport { TestComponent } from './test/test.component';\r\nimport { ReportComponent } from './components/report/report.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', pathMatch: 'full', redirectTo: 'dashboard'}\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FullComponent,\r\n    AppHeaderComponent,\r\n    SpinnerComponent,\r\n    AppSidebarComponent,\r\n    NgbdToastGlobal,\r\n    ToastsContainer,\r\n    ProfileDialog,\r\n    TestComponent,\r\n    ReportComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    FlexLayoutModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    AuthModule, \r\n    RouterModule.forRoot(AppRoutes),\r\n    RouterModule.forRoot(routes),\r\n    NgxPermissionsModule.forRoot(),\r\n    NgbModule,\r\n    NgbdToastGlobalModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: LocationStrategy,\r\n      useClass: PathLocationStrategy\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpErrorInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    ProfileDialog,\r\n  ]\r\n})\r\nexport class AppModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { FullComponent } from './layouts/full/full.component';\r\nimport { AccountComponent } from './components/account/account.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ReportComponent } from './components/report/report.component';\r\n\r\nexport const AppRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FullComponent,\r\n    children: [\r\n      {\r\n        path: '',\r\n        redirectTo: '/dashboard',\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: \"report\",\r\n        component: ReportComponent,\r\n      },\r\n      {\r\n        path: 'dashboard',\r\n        // component: DashboardComponent,\r\n        loadChildren: () => import('./components/dashboard/dashboard.module')\r\n          .then(m => m.DashboardModule)\r\n        },\r\n      {\r\n        path: 'account',\r\n        loadChildren: () => import('./components/account/account.module')\r\n          .then(m => m.AccountModule)\r\n      },\r\n      {\r\n        path: 'customer',\r\n        loadChildren: () => import('./components/customer/customer.module')\r\n          .then(m => m.CustomerModule)\r\n      },\r\n      {\r\n        path: 'vendor',\r\n        loadChildren: () => import('./components/vendor/vendor.module')\r\n          .then(m => m.VendorModule)\r\n      },\r\n      {\r\n        path: 'invoice',\r\n        loadChildren: () => import('./components/invoice/invoice.module')\r\n          .then(m => m.InvoiceModule)\r\n      },\r\n      {\r\n        path: 'bill',\r\n        loadChildren: () => import('./components/bill/bill.module')\r\n          .then(m => m.BillModule)\r\n      },\r\n      {\r\n        path: 'payment',\r\n        loadChildren: () => import('./components/payment/payment.module')\r\n          .then(m => m.PaymentModule)\r\n      },\r\n      {\r\n        path: 'trans',\r\n        loadChildren: () => import('./components/transaction/transaction.module')\r\n          .then(m => m.TransactionModule)\r\n      },\r\n      {\r\n        path: 'user',\r\n        loadChildren: () => import('./components/user/user.module')\r\n          .then(m => m.UserModule)\r\n      },\r\n      {\r\n        path: 'members',\r\n        loadChildren: () => import('./components/members/members.module')\r\n          .then(m => m.MembersModule)\r\n      },\r\n\r\n    ]\r\n  }\r\n];\r\n","export default \".body{\\r\\n  background-color: rgba(0, 0, 0, 0.14);\\r\\n}\\r\\n.align-items-center {\\r\\n  max-width: 400px;\\r\\n}\\r\\n.example-header-image {\\r\\n  /* background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg'); */\\r\\n  background-size: cover;\\r\\n}\\r\\n.container {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  margin: auto;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n.mat-card {\\r\\n  height: -webkit-fit-content;\\r\\n  height: -moz-fit-content;\\r\\n  height: fit-content;\\r\\n}\\r\\n.mat-form-field {\\r\\n  display: block;\\r\\n  min-width: 300px;\\r\\n}\\r\\nmat-card-title,\\r\\nmat-card-content {\\r\\n  /* display: flex; */\\r\\n  justify-content: center;\\r\\n}\\r\\n.error {\\r\\n  padding: 16px;\\r\\n  /* width: 300px; */\\r\\n  color: white;\\r\\n  background-color: red;\\r\\n}\\r\\n.loginActionToggle{\\r\\n  font-size: 12px;\\r\\n}\\r\\n.button {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n.mat-form-field-infix {\\r\\n  display: block;\\r\\n  position: relative;\\r\\n  flex: auto;\\r\\n  min-width: 0;\\r\\n  width: 180px;\\r\\n}\\r\\n.mat-card {\\r\\n    background: #fafafa;\\r\\n  }\\r\\n.mat-card:not([class*=mat-elevation-z]) {\\r\\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12 ) !important;\\r\\n}\\r\\nbody{\\r\\n  background: transparent !important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxxQ0FBcUM7QUFDdkM7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUVBO0VBQ0UseUZBQXlGO0VBQ3pGLHNCQUFzQjtBQUN4QjtBQUNBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixZQUFZO0VBQ1osaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSwyQkFBbUI7RUFBbkIsd0JBQW1CO0VBQW5CLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtBQUNsQjtBQUVBOztFQUVFLG1CQUFtQjtFQUNuQix1QkFBdUI7QUFDekI7QUFFQTtFQUNFLGFBQWE7RUFDYixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLHFCQUFxQjtBQUN2QjtBQUNBO0VBQ0UsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixVQUFVO0VBQ1YsWUFBWTtFQUNaLFlBQVk7QUFDZDtBQUNBO0lBQ0ksbUJBQW1CO0VBQ3JCO0FBQ0E7SUFDRSxxSUFBcUk7QUFDekk7QUFDQTtFQUNFLGtDQUFrQztBQUNwQyIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvZHl7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE0KTtcclxufVxyXG4uYWxpZ24taXRlbXMtY2VudGVyIHtcclxuICBtYXgtd2lkdGg6IDQwMHB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xyXG4gIC8qIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9tYXRlcmlhbC5hbmd1bGFyLmlvL2Fzc2V0cy9pbWcvZXhhbXBsZXMvc2hpYmExLmpwZycpOyAqL1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbn1cclxuLmNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBtYXJnaW46IGF1dG87XHJcbiAgbWluLWhlaWdodDogMTAwdmg7XHJcbn1cclxuLm1hdC1jYXJkIHtcclxuICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG59XHJcbi5tYXQtZm9ybS1maWVsZCB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgbWluLXdpZHRoOiAzMDBweDtcclxufVxyXG5cclxubWF0LWNhcmQtdGl0bGUsXHJcbm1hdC1jYXJkLWNvbnRlbnQge1xyXG4gIC8qIGRpc3BsYXk6IGZsZXg7ICovXHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuXHJcbi5lcnJvciB7XHJcbiAgcGFkZGluZzogMTZweDtcclxuICAvKiB3aWR0aDogMzAwcHg7ICovXHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJlZDtcclxufVxyXG4ubG9naW5BY3Rpb25Ub2dnbGV7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcbi5idXR0b24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxufVxyXG5cclxuLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZmxleDogYXV0bztcclxuICBtaW4td2lkdGg6IDA7XHJcbiAgd2lkdGg6IDE4MHB4O1xyXG59XHJcbi5tYXQtY2FyZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZmFmYWZhO1xyXG4gIH1cclxuICAubWF0LWNhcmQ6bm90KFtjbGFzcyo9bWF0LWVsZXZhdGlvbi16XSkge1xyXG4gICAgYm94LXNoYWRvdzogMHB4IDJweCAxcHggLTFweCByZ2JhKDAsIDAsIDAsIDAuMiksIDBweCAxcHggMXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTQpLCAwcHggMXB4IDNweCAwcHggcmdiYSgwLCAwLCAwLCAwLjEyICkgIWltcG9ydGFudDtcclxufVxyXG5ib2R5e1xyXG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, Output, EventEmitter, Directive, ElementRef } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { ToastService } from '../shared/toast/toast-service';\n\ninterface TokenObj {\n  token: string;\n}\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  @Input() loginAction = true;\n  message:any = '';\n  authForm = new FormGroup({\n    username: new FormControl(''),\n    password: new FormControl('')\n  });\n  resetPassForm = new FormGroup({\n    password: new FormControl('', [Validators.required, Validators.maxLength(50), Validators.minLength(8),\n    Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,30}$/)\n    ]),\n  });\n\n  forgotPassForm = new FormGroup({\n    email: new FormControl('', Validators.email)\n  });\n  resetToken;\n\n  constructor(\n    private apiService: ApiService,\n    private cookieService: CookieService,\n    private http: HttpClient,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private _snackBar: MatSnackBar,\n    private toast: ToastService\n\n  ) { }\n\n  ngOnInit() {\n    // this.apiService.test().subscribe();\n    // if (this.cookieService.check('auth-token')) {\n    //   this.router.navigate(['/dashboard']);\n    // }\n  }\n\n  authentication() {\n    if (this.loginAction) {\n      this.getTokenSubscriber();\n    }\n  }\n\n  getTokenSubscriber() {\n  this.message = '';\n    this.apiService.getToken(this.authForm.value).subscribe(\n      (result: TokenObj) => {\n        if (result[\"access\"] != 'undefined') {\n          var date = new Date();\n          // Set expiration time for the cookie.\n          date.setTime(date.getTime() + 6000 * 1000);\n          this.cookieService.set(\"auth-token\", result[\"access\"], date);\n          date.setTime(date.getTime() + 60000 * 1000);\n          this.cookieService.set(\"refresh-token\", result[\"refresh\"], date);  \n          this._snackBar.openFromComponent(SnakComponent, {\n            duration: 2000,\n          });\n\n          // this.message = {text: 'Logged In Successfully!', type: 'accent'};\n          setTimeout(() => {\n            this.router.navigate(['/dashboard']);\n          }, 2000);\n        }\n      },\n      error => {\n        let msg = '';\n        if (error.error['password']) {\n          msg = \"Password: \" + error.error['password'];\n        }\n        else if (error.error['username']) {\n          msg = \"Username: \" + error.error['username'];          \n        }\n        \n        this.message = {text: msg, type: 'danger'};\n      }\n    );\n  }\n\n  loginActionToggle() {\n    if (this.loginAction) {\n      this.loginAction = false;\n    } else {\n      this.loginAction = true;\n    }\n  }\n\n  forgotPassword(){\n    let data = this.forgotPassForm.value;\n\n    let sendToken = this.http.post(`${environment.serverUrl}password-reset/` , data);\n    sendToken.subscribe(\n      result => {        \n        let req = this.http.get<any>(`${environment.serverUrl}users/reset-token?email=` + data.email);\n        req.subscribe(\n          result => {\n            this.resetToken = result;\n          },\n        ) \n      },\n    ) \n  }\n\n  resetforgotPassword(){\n    let sendToken = this.http.post(`${environment.serverUrl}password-reset/confirm/`,\n      {token: this.resetToken, password: this.resetPassForm.value.password});\n    sendToken.subscribe(\n      result => {\n        this.loginAction = true;\n        this.toast.show(\"Password changed, please login!\", { classname: 'bg-success text-light', delay: 5000 });\n      })\n\n  }\n}\n\n@Directive({\n  selector: '[autofocus]'\n})\nexport class AutofocusDirective {\n  private _autofocus;\n  constructor(private el: ElementRef) {\n  }\n\n  ngOnInit() {\n    if (this._autofocus || typeof this._autofocus === \"undefined\")\n      this.el.nativeElement.focus();      //For SSR (server side rendering) this is not safe. Use: https://github.com/angular/angular/issues/15008#issuecomment-285141070)\n  }\n\n  @Input() set autofocus(condition: boolean) {\n    this._autofocus = condition != false;\n  }\n}\n\n@Component({\n  selector: 'snack-bar-component-login',\n  template: '<span>Logged in successfully!</span>',\n  styles:[`\n    span{\n      style: white;\n    }`\n  ]\n})\nexport class SnakComponent { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent, SnakComponent } from './auth.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MaterialModule } from '../material-module';\n\nconst routes: Routes = [\n  {path: 'login', component: AuthComponent}\n];\n\n@NgModule({\n  declarations: [AuthComponent, SnakComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes),\n    MaterialModule,\n    FormsModule,\n    FlexLayoutModule \n  ],\n  exports: [\n    RouterModule,\n  ],\n  providers: [\n    CookieService\n  ], \n  entryComponents:[\n    SnakComponent\n  ]\n})\nexport class AuthModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVwb3J0L3JlcG9ydC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\nimport { ApiService } from '../../api.service';\nimport { DatePipe } from '@angular/common';\nimport { ExportToCsv } from 'export-to-csv';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../../shared/toast/toast-service';\n\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  reportFC = new FormGroup({\n    endDate : new FormControl(null, Validators.required),\n    currency: new FormControl(null, Validators.required),\n    startDate: new FormControl(null, Validators.required),\n  })\n  pipe;\n  paymentsForCSV: any = [];\n  invoices:any = [];\n  bills:any = [] ;\n  accounts:any = [];\n  customers:any = [];\n  vendors:any = [];\n  constructor(\n    private api: ApiService,\n    private router: Router,\n    private toast: ToastService\n  ) { \n    this.pipe = new DatePipe('en');\n  }\n\n  ngOnInit() {\n    this.checkPerm();\n  }\n\n  checkPerm() {\n    this.api.loadAll('cuser').subscribe(\n      result => {\n        if (!result[0].is_superuser) {\n          this.router.navigate(['/dashboard']);\n          this.toast.show(\"Permission denied!\", { classname: 'bg-danger text-light', delay: 5000 });\n        }\n      })\n  }\n\n  invoiceReport() { \n    let start = this.pipe.transform(this.reportFC.value.startDate, 'yyyy-MM-dd');\n    let end = this.pipe.transform(this.reportFC.value.endDate, 'yyyy-MM-dd');\n    let header = [\"ID\", \"Inv number\", \"Currency\", \"Total Price\", \"Balance\", \"Due date\", \"Status\", \"Created_at\", \"Updated_at\", \"Customer\"];\n    let filename = \"Invoices (From \" + start + \") (To \" + end + \")\";\n    let query = 'inv?start=' + start + '&end=' + end + '&curr=' + this.reportFC.value.currency + '&';\n\n    this.api.loadAll(query).subscribe(\n      (result: any) => {\n        this.invoices = result;\n        this.api.loadAll('csmr').subscribe(\n          (result: any) => {\n            this.customers= result;\n            this.invoices.forEach((e, k) => {\n              let c = this.customers.filter(x => x.id == e.customer)[0];\n\n              if (c && c != undefined) {\n                this.invoices[k].customer = c.label;\n              }\n              else {\n                this.invoices[k].customer = \"-\";\n              }\n            })\n\n            this.exportCsv(filename, this.invoices, header)\n           });\n\n      });\n\n\n  }\n  billReport() {\n    let start = this.pipe.transform(this.reportFC.value.startDate, 'yyyy-MM-dd');\n    let end = this.pipe.transform(this.reportFC.value.endDate, 'yyyy-MM-dd');\n    let header = [\"ID\", \"Bill number\", \"Currency\", \"Total price\", \"Balance\", \"Due date\", \"Status\", \"Created\", \"Updated\", \"Vendor\"];\n    let filename = \"Bills (From \" + start + \") (To \" + end + \")\";\n    let query = 'bil?start=' + start + '&end=' + end + '&curr=' + this.reportFC.value.currency + '&';\n\n    this.api.loadAll(query).subscribe(\n      (result: any) => { \n        this.bills = result;\n        this.api.loadAll('vdr').subscribe(\n          (result: any) => {\n            this.vendors = result;\n            this.bills.forEach((e, k) => {\n              let v = this.vendors.filter(x => x.id == e.vendor)[0];\n\n              if (v && v != undefined) {\n                this.bills[k].vendor = v.label;\n              }\n              else {\n                this.bills[k].vendor = \"-\";\n              }\n            })\n            this.exportCsv(filename, this.bills, header)\n            \n           });\n\n      });\n\n   }\n  exportPayments() {\n    let start = this.pipe.transform(this.reportFC.value.startDate, 'yyyy-MM-dd');\n    let end = this.pipe.transform(this.reportFC.value.endDate, 'yyyy-MM-dd');\n    let header = ['ID', 'Label', 'Type', 'Currency', \"Amount\", \"Created\", \"Updated\", 'Account', \"Bill\", \"Invoice\",];\n    let filename = \"Payment (From \" + start + \") (To \" + end + \")\";\n    let query = 'pay?start=' + start + '&end=' + end + '&curr=' + this.reportFC.value.currency + '&';\n    this.api.loadAll(query).subscribe(\n      result => {\n        this.paymentsForCSV = result;\n        this.api.loadAll('acnt').subscribe(\n          result => {\n            this.accounts = result;\n            this.api.loadAll('inv').subscribe(\n              (result: any) => {\n                this.invoices = result;\n                this.api.loadAll('bil').subscribe(\n                  (result: any) => {\n                    this.bills = result;\n                    this.paymentsForCSV.forEach((e, k) => {\n                      let a = this.accounts.filter(x => x.id == e.account)[0];\n                      let i = this.invoices.filter(x => x.id == e.ref_inv)[0];\n                      let b = this.bills.filter(x => x.id == e.ref_bill)[0];\n\n                      if (a && a != undefined) {\n                        this.paymentsForCSV[k].account = a.label;\n                      }\n                      else{\n                        this.paymentsForCSV[k].account = \"-\";\n                      }\n                      if (i && i != undefined) {\n                        this.paymentsForCSV[k].ref_inv = i.inv_number;\n                      }\n                      else {\n                        this.paymentsForCSV[k].ref_inv = \"-\";\n                      }\n                      if (b && b != undefined) {\n                        this.paymentsForCSV[k].ref_bill = b.bill_number;\n                      }\n                      else {\n                        this.paymentsForCSV[k].ref_bill = \"-\";\n                      }\n                    });\n                    this.exportCsv(filename, this.paymentsForCSV, header)\n                  })\n              });\n          }\n        );\n      })\n\n  }\n\n  paymentReport() {\n    this.exportPayments();\n    // this.api.loadAll('pay').subscribe(\n    //   (result: any) => { });\n\n  }\n  exportCsv(title, data, headers = null) {\n\n    console.log(title);\n\n    let options = {\n      fieldSeparator: ',',\n      quoteStrings: '\"',\n      decimalSeparator: '.',\n      showLabels: true,\n      showTitle: false,\n      title: title,\n      filename: title,\n      useTextFile: false,\n      useBom: true,\n      useKeysAsHeaders: true,\n      headers: []\n      //  <-- Won't work with useKeysAsHeaders present!\n    };\n\n    if (headers) {\n      options.useKeysAsHeaders = false;\n      options.headers = headers;\n    }\n    const csvExporter = new ExportToCsv(options);\n\n    csvExporter.generateCsv(data);\n\n  }\n\n\n}\n","import {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpResponse,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError, switchMap } from 'rxjs/operators';\r\nimport { ApiService } from './api.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { ToastService } from './shared/toast/toast-service';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private toast: ToastService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(request)\r\n    .pipe(\r\n      catchError((error: HttpErrorResponse) => {        \r\n        let errorMessage = '';\r\n        let hRMsg = '';        \r\n        if (error.status == 400) {          \r\n          if(error.error){\r\n            if(error.error.password){\r\n              hRMsg = error.error.password;\r\n            }\r\n            else if (error.error.email){\r\n              hRMsg = error.error.email;\r\n            }\r\n            // let e:any = error.error;\r\n            // e.forEach((element, key) => {\r\n            //   hRMsg = element;\r\n            //   console.log(key);\r\n              \r\n            // });\r\n          }\r\n        }\r\n        else if (error.status == 401) {\r\n          if (request.method == \"GET\") {\r\n            this.router.navigate(['/login']);\r\n            hRMsg = 'Session expired, please login!';\r\n          }else{\r\n            hRMsg = 'Unauthorized, use valid username and password!';\r\n          }\r\n       \r\n          // this.apiService.refreshToken().subscribe(\r\n          //   result => {\r\n          //     // return next.handle()\r\n\r\n          //     // Update the access token again.\r\n          //     // var date = new Date();\r\n          //     // date.setTime(date.getTime() + 600 * 1000);\r\n          //     // this.cookieService.set(\"auth-token\", result[\"access\"], date);\r\n          //     },\r\n          //     error => {\r\n          //       console.log(error);\r\n          //     }\r\n          //   );\r\n        } \r\n        else if (error.status == 403) {\r\n          this.router.navigate(['/login']);\r\n          hRMsg = 'Session expired, please login!';\r\n        } \r\n        else if (error.status == 0) {            \r\n          hRMsg = 'Server down, try later!';\r\n        }\r\n        else if (error.status != 200){\r\n            if (error){\r\n                if (error.error instanceof ErrorEvent) {\r\n                  errorMessage = `Error: ${error.error.message}`;\r\n                  console.log(errorMessage);\r\n                  \r\n                } \r\n              if (error.error) {\r\n                  // server-side error\r\n                  // error.error.forEach(element => {\r\n                  //   console.log(element);\r\n                    \r\n                  // });\r\n                  errorMessage = `Error Code: ${error.status}\\nMessage: ${error.error}`;\r\n                  console.log(errorMessage);\r\n                }\r\n                hRMsg = 'Something wrong, please try again!';\r\n              }\r\n          }\r\n        // this.toast.remove;\r\n          this.toast.show(hRMsg, { classname: 'bg-danger text-light', delay: 5000 });\r\n          return throwError(error);\r\n        }\r\n      ),\r\n    )\r\n  }\r\n}","import * as $ from 'jquery';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { MenuItems } from '../../shared/menu-items/menu-items';\r\n\r\n/** @title Responsive sidenav */\r\n@Component({\r\n  selector: 'app-full-layout',\r\n  templateUrl: 'full.component.html',\r\n  styleUrls: []\r\n})\r\nexport class FullComponent implements OnDestroy, AfterViewInit {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems,\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n  ngAfterViewInit() {\r\n    \r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ApiService } from '../../../api.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, ErrorStateMatcher } from '@angular/material';\r\nimport { FormBuilder, FormGroup, FormControl, Validators, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { NgxPermissionsService } from 'ngx-permissions';\r\nimport { ToastService } from '../../../shared/toast/toast-service';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const invalidCtrl = !!(control && control.invalid && control.parent.dirty);\r\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\r\n\r\n    return (invalidCtrl || invalidParent);\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppHeaderComponent implements OnInit{\r\n  apiUrl = environment.serverUrl;\r\n  matcher = new MyErrorStateMatcher();\r\n  passChange = false;\r\n  perm;\r\n\r\n  constructor(\r\n    private cookieService: CookieService,\r\n    private router: Router,\r\n    private api: ApiService,\r\n    public dialog: MatDialog,\r\n    private permServ: NgxPermissionsService\r\n  ) { }\r\n\r\n  logOutUser() {\r\n    this.cookieService.delete('auth-token');\r\n    this.cookieService.delete('refresh-token');\r\n    this.router.navigate(['/login']);\r\n  }\r\n  ngOnInit() {\r\n    if (!this.cookieService.check('refresh-token')) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    else{\r\n      this.api.loadAll('cuser').subscribe(\r\n        result => {\r\n          if (result[0].is_superuser) {\r\n            this.perm = [\"ADMIN\"];\r\n          }\r\n          else {\r\n            this.perm = [\"EDITOR\"];\r\n          }\r\n          this.permServ.loadPermissions(this.perm);\r\n        })\r\n    }\r\n  }\r\n  goToUserProfile(data) {\r\n    this.passChange = data;\r\n\r\n    const dialogRef = this.dialog.open(ProfileDialog, {\r\n      data: {\r\n        mainData: [],\r\n        customer: [],\r\n        type: data\r\n      },\r\n      maxHeight: '70vh',\r\n      maxWidth: '600px',\r\n    });\r\n    \r\n  }\r\n}\r\n\r\nexport interface DialogData { }\r\n\r\n@Component({\r\n  selector: 'profile-dialog',\r\n  templateUrl: 'profile.component.html',\r\n})\r\nexport class ProfileDialog implements OnInit {\r\n  perm = [\"GUEST\"];\r\n\r\n  apiUrl = environment.serverUrl;\r\n  matchPass:boolean = true;\r\n  constructor(\r\n    private api: ApiService,\r\n    private http: HttpClient,\r\n    private cookie: CookieService,\r\n    public dialogRef: MatDialogRef<any>,\r\n    @Inject(MAT_DIALOG_DATA) public dData: DialogData,\r\n    private _formBuilder: FormBuilder,\r\n    public permServ: NgxPermissionsService,\r\n    private toast: ToastService,\r\n    private router: Router,\r\n  ) { }\r\n\r\n  profileFC = this._formBuilder.group({\r\n    username: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3)]],\r\n    email: ['', [Validators.email, Validators.required]],\r\n    first_name: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3)]],\r\n    last_name: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3)]],\r\n    oldpassword: ['',],\r\n    password: ['',],\r\n    confirmPassword: ['',],\r\n  }); \r\n  chPassFC = this._formBuilder.group({\r\n    username: ['',],\r\n    email: ['',],\r\n    first_name: ['',],\r\n    last_name: ['',],\r\n    oldpassword: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(3)]],\r\n    password: ['', [Validators.required, Validators.maxLength(50), Validators.minLength(8),\r\n      Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{8,30}$/)\r\n    ]],\r\n    confirmPassword: ['', [Validators.required]],\r\n  }, { validator: this.checkPasswords });\r\n\r\n  editData;\r\n  ngOnInit() {\r\n    this.api.loadAll('cuser').subscribe(\r\n      result => {\r\n        console.log(result);\r\n        \r\n        if (result[0].is_superuser) {\r\n          this.perm = [\"ADMIN\"];\r\n        }\r\n        else {\r\n          this.perm = [\"EDITOR\"];\r\n        }\r\n        this.permServ.loadPermissions(this.perm);\r\n\r\n        this.profileFC.setValue({\r\n          username: result[0].username,\r\n          email: result[0].email,\r\n          first_name: result[0].first_name,\r\n          last_name: result[0].last_name,\r\n          oldpassword: null,\r\n          password: null,\r\n          confirmPassword: null,\r\n        })\r\n        this.chPassFC.setValue({\r\n          username: result[0].username,\r\n          email: result[0].email,\r\n          first_name: result[0].first_name,\r\n          last_name: result[0].last_name,\r\n          oldpassword: null,\r\n          password: null,\r\n          confirmPassword: null,\r\n        })\r\n        \r\n      },\r\n      error => {\r\n        this.dialogRef.close(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  profileOperation() {\r\n    let data:any;\r\n    let tmp:any = this.dData;\r\n    if(tmp.type){\r\n      data = this.chPassFC.value;\r\n    } else {\r\n      data = this.profileFC.value;\r\n    }    \r\n    if (data) {\r\n      let req = this.http.post(`${this.apiUrl}users/update/`, data, {\r\n        headers: new HttpHeaders({\r\n          \"Authorization\": \"Bearer \" + this.cookie.get('auth-token'),\r\n        }),\r\n      });\r\n  \r\n      req.subscribe(\r\n        result => {\r\n          this.toast.show(\"User updated.\", { classname: 'bg-success text-light', delay: 5000 });\r\n          let dialog:any = this.dData;\r\n          if (dialog.type) {\r\n            this.cookie.delete('auth-token');\r\n            this.router.navigate(['/login']);\r\n          }\r\n          this.dialogRef.close();\r\n        },\r\n      )      \r\n    }\r\n  }\r\n  checkPasswords(group: FormGroup){\r\n    \r\n    let pass = group.controls.password;\r\n    let confirmPass = group.controls.confirmPassword;\r\n    return confirmPass.setErrors(\r\n      pass.value !== confirmPass.value ? { notEquivalent: true } : null\r\n    );\r\n  }\r\n\r\n}","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  NgZone,\r\n  OnDestroy,\r\n  ViewChild,\r\n  HostListener,\r\n  Directive,\r\n  AfterViewInit\r\n} from '@angular/core';\r\nimport { MediaMatcher } from '@angular/cdk/layout';\r\nimport { MenuItems } from '../../../shared/menu-items/menu-items';\r\nimport { ApiService } from '../../../api.service';\r\nimport { NgxPermissionsService } from 'ngx-permissions';\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: []\r\n})\r\nexport class AppSidebarComponent implements OnDestroy {\r\n  mobileQuery: MediaQueryList;\r\n\r\n  private _mobileQueryListener: () => void;\r\n  perm;\r\n  constructor(\r\n    changeDetectorRef: ChangeDetectorRef,\r\n    media: MediaMatcher,\r\n    public menuItems: MenuItems,\r\n    private api: ApiService,\r\n    private permServ: NgxPermissionsService\r\n  ) {\r\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\r\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\r\n    this.mobileQuery.addListener(this._mobileQueryListener);\r\n    this.api.loadAll('cuser').subscribe(\r\n      result => {\r\n        if (result[0].is_superuser) {\r\n          this.perm = [\"ADMIN\"];\r\n        }\r\n        else {\r\n          this.perm = [\"EDITOR\"];\r\n        }\r\n        this.permServ.loadPermissions(this.perm);\r\n      })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mobileQuery.removeListener(this._mobileQueryListener);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatStepperModule,\r\n} from '@angular/material';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\n\r\n/**\r\n * NgModule that includes all Material modules that are required to serve the demo-app.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatFormFieldModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSlideToggleModule,\r\n    MatSliderModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatNativeDateModule,\r\n    CdkTableModule,\r\n    A11yModule,\r\n    BidiModule,\r\n    CdkAccordionModule,\r\n    ObserversModule,\r\n    OverlayModule,\r\n    PlatformModule,\r\n    PortalModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n","import {\r\n  Directive,\r\n  OnInit,\r\n  AfterViewInit,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\nimport { Router, NavigationEnd } from '@angular/router';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[appAccordion]'\r\n})\r\nexport class AccordionDirective implements AfterContentChecked {\r\n  protected navlinks: Array<AccordionLinkDirective> = [];\r\n\r\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link !== selectedLink) {\r\n        link.selected = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  addLink(link: AccordionLinkDirective): void {\r\n    this.navlinks.push(link);\r\n  }\r\n\r\n  removeGroup(link: AccordionLinkDirective): void {\r\n    const index = this.navlinks.indexOf(link);\r\n    if (index !== -1) {\r\n      this.navlinks.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  checkOpenLinks() {\r\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\r\n      if (link.group) {\r\n        const routeUrl = this.router.url;\r\n        const currentUrl = routeUrl.split('/');\r\n        if (currentUrl.indexOf(link.group) > 0) {\r\n          link.selected = true;\r\n          this.closeOtherLinks(link);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationEnd))\r\n      .subscribe(e => this.checkOpenLinks());\r\n  }\r\n\r\n  constructor(private router: Router) {\r\n    setTimeout(() => this.checkOpenLinks());\r\n  }\r\n}\r\n","import { Directive, HostListener, Inject } from '@angular/core';\r\n\r\nimport { AccordionLinkDirective } from './accordionlink.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionToggle]'\r\n})\r\nexport class AccordionAnchorDirective {\r\n  protected navlink: AccordionLinkDirective;\r\n\r\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\r\n    this.navlink = navlink;\r\n  }\r\n\r\n  @HostListener('click', ['$event'])\r\n  onClick(e: any) {\r\n    this.navlink.toggle();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  Inject,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AccordionDirective } from './accordion.directive';\r\n\r\n@Directive({\r\n  selector: '[appAccordionLink]'\r\n})\r\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\r\n  @Input()\r\n  public group: any;\r\n\r\n  @HostBinding('class.selected')\r\n  @Input()\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n\r\n  set selected(value: boolean) {\r\n    this._selected = value;\r\n    if (value) {\r\n      this.nav.closeOtherLinks(this);\r\n    }\r\n  }\r\n\r\n  protected _selected: boolean;\r\n  protected nav: AccordionDirective;\r\n\r\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\r\n    this.nav = nav;\r\n  }\r\n\r\n  ngOnInit(): any {\r\n    this.nav.addLink(this);\r\n  }\r\n\r\n  ngOnDestroy(): any {\r\n    this.nav.removeGroup(this);\r\n  }\r\n\r\n  toggle(): any {\r\n    this.selected = !this.selected;\r\n  }\r\n}\r\n","export var GlobalVariable = {\r\n\r\n  apiURL: \"http://karimi73.pythonanywhere.com/\",\r\n  siteTitle: \"This is example of ItSolutionStuff.com\",\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport interface Menu {\r\n  state: string;\r\n  name: string;\r\n  type: string;\r\n  icon: string;\r\n  submenu: object\r\n}\r\n\r\nconst MENUITEMS = [\r\n  { state: 'dashboard', name: 'Dashboard', type: 'link', icon: 'dashboard', perm: [\"ADMIN\"] },\r\n  { state: 'invoice', name: 'Invoice', type: 'link', icon: 'description', perm: [\"ADMIN\", \"EDITOR\"] },\r\n  { state: 'bill', name: 'Bill', type: 'link', icon: 'content_paste', perm: [\"ADMIN\", \"EDITOR\"] },\r\n  { state: 'payment', name: 'Payment', type: 'link', icon: 'attach_money', perm: [\"ADMIN\", \"EDITOR\"] },\r\n  { state: 'customer', name: 'Customer', type: 'link', icon: 'people_alt', perm: [\"ADMIN\", \"EDITOR\"] },\r\n  { state: 'vendor', name: 'Vendor', type: 'link', icon: 'business', perm: [\"ADMIN\", \"EDITOR\"] },\r\n  { state: 'report', name: 'Report', type: 'link', icon: 'show_chart', perm: [\"ADMIN\"] },\r\n  { state: 'trans', name: 'Transaction', type: 'link', icon: 'request_quote', perm: [\"ADMIN\"] },\r\n  { state: 'account', name: 'Account Summary', type: 'link', icon: 'account_balance', perm: [\"ADMIN\"] },\r\n  { state: 'members', name: 'Members', type: 'link', icon: 'people', perm: [\"ADMIN\"] },\r\n];\r\n\r\n@Injectable()\r\nexport class MenuItems {\r\n  getMenuitem(): any[] {\r\n    return MENUITEMS;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MenuItems } from './menu-items/menu-items';\r\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\r\nimport { NgxPermissionsModule } from 'ngx-permissions';\r\nimport { PrintError } from './print-error.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective,\r\n  ],\r\n  exports: [\r\n    AccordionAnchorDirective,\r\n    AccordionLinkDirective,\r\n    AccordionDirective,\r\n    NgxPermissionsModule\r\n   ],\r\n  providers: [ MenuItems ]\r\n})\r\nexport class SharedModule { }\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  Inject,\r\n  ViewEncapsulation\r\n} from '@angular/core';\r\nimport {\r\n  Router,\r\n  NavigationStart,\r\n  NavigationEnd,\r\n  NavigationCancel,\r\n  NavigationError\r\n} from '@angular/router';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\r\n        <div class=\"spinner\">\r\n          <div class=\"double-bounce1\"></div>\r\n          <div class=\"double-bounce2\"></div>\r\n        </div>\r\n    </div>`,\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SpinnerComponent implements OnDestroy {\r\n  public isSpinnerVisible = true;\r\n\r\n  @Input()\r\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    @Inject(DOCUMENT) private document: Document\r\n  ) {\r\n    this.router.events.subscribe(\r\n      event => {\r\n        if (event instanceof NavigationStart) {\r\n          this.isSpinnerVisible = true;\r\n        } else if (\r\n          event instanceof NavigationEnd ||\r\n          event instanceof NavigationCancel ||\r\n          event instanceof NavigationError\r\n        ) {\r\n          this.isSpinnerVisible = false;\r\n        }\r\n      },\r\n      () => {\r\n        this.isSpinnerVisible = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.isSpinnerVisible = false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { GlobalVariable } from '../global-constants';\r\nimport { ToastService } from './toast-service';\r\n\r\n@Component({ selector: 'ngbd-toast-global', templateUrl: './toast-global.component.html' })\r\nexport class NgbdToastGlobal {\r\n\r\n  // GlobalVariable.siteTitle = 'asdfk';\r\n  toastMsg = GlobalVariable.siteTitle;\r\n  constructor(public toastService: ToastService) { }\r\n  \r\n  showStandard(msg) {\r\n    // if (this.toastMsg) {\r\n    this.toastService.show(this.toastMsg, { classname: 'bg-info text-light', delay: 2500 });\r\n    // }\r\n  }\r\n\r\n  showSuccess(msg) {\r\n    this.toastService.show('I am a success toast', { classname: 'bg-success text-light', delay: 2500 });\r\n  }\r\n\r\n  showDanger(dangerTpl, msg) {\r\n    this.toastService.show(dangerTpl, { classname: 'bg-danger text-light', delay: 2500 });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NgbdToastGlobal } from './toast-global.component';\r\nimport { ToastsContainer } from './toasts-container.component';\r\n\r\n@NgModule({\r\n  imports: [BrowserModule, NgbModule],\r\n  declarations: [],\r\n  bootstrap: [NgbdToastGlobal]\r\n})\r\nexport class NgbdToastGlobalModule { }\r\n","import { Injectable, TemplateRef } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class ToastService {\r\n  toasts: any[] = [];\r\n\r\n  show(textOrTpl: string | TemplateRef<any>, options: any = {}) {\r\n    this.toasts.push({ textOrTpl, ...options });\r\n  }\r\n\r\n  remove(toast) {\r\n    this.toasts = this.toasts.filter(t => t !== toast);\r\n  }\r\n}","import { Component, TemplateRef } from '@angular/core';\r\n\r\nimport { ToastService } from './toast-service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-toasts',\r\n  template: `\r\n    <ngb-toast\r\n      *ngFor=\"let toast of toastService.toasts\"\r\n      [class]=\"toast.classname\"\r\n      [autohide]=\"true\"\r\n      [delay]=\"toast.delay || 5000\"\r\n      (hide)=\"toastService.remove(toast)\"\r\n    >\r\n      <ng-template [ngIf]=\"isTemplate(toast)\" [ngIfElse]=\"text\">\r\n        <ng-template [ngTemplateOutlet]=\"toast.textOrTpl\"></ng-template>\r\n      </ng-template>\r\n\r\n      <ng-template #text>{{ toast.textOrTpl }}</ng-template>\r\n    </ngb-toast>\r\n  `,\r\n  host: { '[class.ngb-toasts]': 'true' }\r\n})\r\nexport class ToastsContainer {\r\n  constructor(public toastService: ToastService) { }\r\n\r\n  isTemplate(toast) { return toast.textOrTpl instanceof TemplateRef; }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlc3QvdGVzdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  serverUrl: \"http://karimi73.pythonanywhere.com/api/\",\r\n  serverDomain: \"http://karimi73.pythonanywhere.com\",\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport 'hammerjs';\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}